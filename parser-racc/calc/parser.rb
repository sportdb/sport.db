#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "calc.y".
#

require 'racc/parser.rb'
class CalculatorParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     8,     9,     5,     6,     8,     9,    18,    10,    11,     5,
     6,     5,     6,     5,     6,     5,     6,     5,     6,    10,
    11,    10,    11,     7,    13 ]

racc_action_check = [
    12,    12,     0,     0,     2,     2,    12,     3,     3,     6,
     6,     8,     8,     9,     9,    10,    10,    11,    11,    14,
    14,    15,    15,     1,     7 ]

racc_action_pointer = [
    -4,    23,     2,     3,   nil,   nil,     3,    24,     5,     7,
     9,    11,    -2,   nil,    15,    17,   nil,   nil,   nil ]

racc_action_default = [
   -10,   -10,    -1,    -2,    -5,    -8,   -10,   -10,   -10,   -10,
   -10,   -10,   -10,    19,    -3,    -4,    -6,    -7,    -9 ]

racc_goto_table = [
     2,    14,    15,    16,    17,     1,    12 ]

racc_goto_check = [
     2,     3,     3,     4,     4,     1,     2 ]

racc_goto_pointer = [
   nil,     5,     0,    -7,    -7 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 10, :_reduce_none,
  1, 11, :_reduce_none,
  3, 11, :_reduce_3,
  3, 11, :_reduce_4,
  1, 12, :_reduce_none,
  3, 12, :_reduce_6,
  3, 12, :_reduce_7,
  1, 13, :_reduce_none,
  3, 13, :_reduce_9 ]

racc_reduce_n = 10

racc_shift_n = 19

racc_token_table = {
  false => 0,
  :error => 1,
  :PLUS => 2,
  :MINUS => 3,
  :MULTIPLY => 4,
  :DIVIDE => 5,
  :NUMBER => 6,
  :LPAREN => 7,
  :RPAREN => 8 }

racc_nt_base = 9

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "PLUS",
  "MINUS",
  "MULTIPLY",
  "DIVIDE",
  "NUMBER",
  "LPAREN",
  "RPAREN",
  "$start",
  "expressions",
  "expression",
  "term",
  "factor" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'calc.y', 14)
  def _reduce_3(val, _values, result)
     result = val[0] + val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 16)
  def _reduce_4(val, _values, result)
     result = val[0] - val[2]
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'calc.y', 21)
  def _reduce_6(val, _values, result)
     result = val[0] * val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 23)
  def _reduce_7(val, _values, result)
     result = val[0] / val[2]
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'calc.y', 28)
  def _reduce_9(val, _values, result)
     result = val[1]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class CalculatorParser
