#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "calc.y".
#

require 'racc/parser.rb'
class CalculatorParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     9,    10,     8,     7,     7,     7,    20,     6,     6,     6,
     7,     7,     7,    13,     6,     6,     6,     9,    10,    11,
    12,    11,    12,    11,    12,    15 ]

racc_action_check = [
    14,    14,     1,     0,     6,     9,    14,     0,     6,     9,
    10,    11,    12,     5,    10,    11,    12,     2,     2,     3,
     3,    16,    16,    17,    17,     8 ]

racc_action_pointer = [
     0,     2,    15,    15,   nil,     7,     1,   nil,    25,     2,
     7,     8,     9,   nil,    -2,   nil,    17,    19,   nil,   nil,
   nil ]

racc_action_default = [
   -10,   -12,    -1,    -2,    -5,   -12,   -10,   -11,   -12,   -10,
   -10,   -10,   -10,    -8,   -12,    21,    -3,    -4,    -6,    -7,
    -9 ]

racc_goto_table = [
     2,    16,    17,    18,    19,     1,    14 ]

racc_goto_check = [
     2,     3,     3,     4,     4,     1,     2 ]

racc_goto_pointer = [
   nil,     5,     0,    -8,    -8,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 10, :_reduce_none,
  1, 11, :_reduce_none,
  3, 11, :_reduce_3,
  3, 11, :_reduce_4,
  1, 12, :_reduce_none,
  3, 12, :_reduce_6,
  3, 12, :_reduce_7,
  2, 13, :_reduce_8,
  3, 13, :_reduce_9,
  0, 14, :_reduce_none,
  1, 14, :_reduce_none ]

racc_reduce_n = 12

racc_shift_n = 21

racc_token_table = {
  false => 0,
  :error => 1,
  :PLUS => 2,
  :MINUS => 3,
  :MULTIPLY => 4,
  :DIVIDE => 5,
  :NUMBER => 6,
  :LPAREN => 7,
  :RPAREN => 8 }

racc_nt_base = 9

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "PLUS",
  "MINUS",
  "MULTIPLY",
  "DIVIDE",
  "NUMBER",
  "LPAREN",
  "RPAREN",
  "$start",
  "expressions",
  "expression",
  "term",
  "factor",
  "sign_opt" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'calc.y', 18)
  def _reduce_3(val, _values, result)
     result = val[0] + val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 20)
  def _reduce_4(val, _values, result)
     result = val[0] - val[2]
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'calc.y', 25)
  def _reduce_6(val, _values, result)
     result = val[0] * val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 27)
  def _reduce_7(val, _values, result)
     result = val[0] / val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 32)
  def _reduce_8(val, _values, result)
                     result =  val[0] == '-' ? -val[1] : val[1] 

    result
  end
.,.,

module_eval(<<'.,.,', 'calc.y', 35)
  def _reduce_9(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 10 omitted

# reduce 11 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class CalculatorParser
