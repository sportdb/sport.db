#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.y".
#

require 'racc/parser.rb'
class RaccMatchParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    21,    13,    22,   101,   214,   227,   245,   106,    23,   176,
    57,    24,    55,   247,   110,   230,    25,    97,    51,    26,
    27,   121,    28,    58,   213,   106,    32,   174,    60,   231,
    29,   221,    48,    30,    34,   226,    35,    36,    37,   107,
    39,    42,    44,    45,    98,   100,    86,    21,    13,    22,
   101,   177,    57,    53,    55,    23,   111,   107,    24,   256,
   222,    57,   219,    25,   171,    51,    26,    27,    89,    28,
    86,    67,    94,    32,    61,    66,    82,    29,    83,    48,
    30,    34,    92,    35,    36,    37,    63,    39,    42,    44,
    45,    98,   100,    86,    57,    70,    55,    70,   147,    57,
    53,    55,   113,   146,    91,    70,   103,   250,   104,    72,
    73,    72,    73,   248,    44,    45,   116,    51,   155,    72,
    73,   231,   138,   152,   141,   144,   190,   147,   154,   140,
   126,   150,   146,   147,   162,   163,   194,    77,   146,   130,
   133,   131,   132,    67,   192,   193,    78,    66,   130,   133,
   131,   132,    79,    80,    86,  -109,  -110,    87,    88,    48,
   105,   117,   118,    57,   126,   127,   134,   136,   137,   142,
   143,   148,   149,   158,   160,   164,   165,   167,   168,   -99,
   169,    48,   178,   179,   181,   182,    51,   184,   126,   186,
    57,   188,    57,   196,   197,   198,   199,   200,   201,   202,
   203,   205,   206,   207,   208,    70,   210,   211,   212,    77,
   216,   217,   219,   223,   224,   225,   228,    48,   232,   233,
   179,   235,    57,   126,   237,   238,   239,   240,   241,   242,
   243,   244,   249,    48,   252,   158,   254,    77,   257,   219,
   259 ]

racc_action_check = [
     0,     0,     0,    41,   152,   166,   219,    47,     0,    99,
    53,     0,    53,   219,    48,   172,     0,    41,     0,     0,
     0,    54,     0,     1,   152,    48,     0,    98,    22,   172,
     0,   159,     0,     0,     0,   166,     0,     0,     0,    47,
     0,     0,     0,     0,    41,    41,    41,     2,     2,     2,
    95,    99,     0,     0,     0,     2,    48,    48,     2,   253,
   159,    54,   253,     2,    95,     2,     2,     2,    38,     2,
    98,    25,    38,     2,    23,    25,    32,     2,    32,     2,
     2,     2,    38,     2,     2,     2,    24,     2,     2,     2,
     2,    95,    95,    95,    32,    26,    32,    27,   220,     2,
     2,     2,    49,   220,    38,   158,    42,   229,    42,    26,
    26,    27,    27,   220,    42,    42,    49,    49,    75,   158,
   158,   229,    64,    75,    64,    68,   124,    68,    75,    64,
   124,    74,    68,    74,    79,    79,   128,    28,    74,   128,
   128,   128,   128,   139,   126,   126,    29,   139,    60,    60,
    60,    60,    30,    31,    33,    34,    35,    36,    37,    40,
    45,    51,    52,    55,    57,    58,    61,    62,    63,    66,
    67,    70,    71,    77,    78,    81,    84,    86,    90,    92,
    93,    97,   100,   108,   109,   112,   114,   116,   117,   119,
   120,   121,   123,   130,   131,   132,   133,   134,   135,   136,
   138,   140,   141,   142,   144,   145,   147,   150,   151,   153,
   154,   155,   156,   161,   164,   165,   168,   171,   175,   177,
   182,   186,   187,   190,   196,   197,   198,   201,   202,   212,
   213,   214,   227,   231,   244,   245,   246,   247,   255,   256,
   258 ]

racc_action_pointer = [
    -1,    23,    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    24,    64,    71,    56,    80,    82,   122,   114,
   120,   149,    41,   107,   122,   123,   153,   154,    64,   nil,
   126,    -1,    71,   nil,   nil,   117,   nil,   -12,     6,    98,
   nil,   108,   158,   -43,     8,   110,   nil,   142,   165,   nil,
   143,   155,   154,   152,   111,   nil,   154,   154,   114,   nil,
   149,   150,   nil,   nil,   120,   110,   nil,   146,   141,    99,
   nil,   147,   nil,   nil,   148,   nil,   128,   nil,   nil,   nil,
   140,   nil,   138,   139,   nil,    46,   nil,   148,    23,     5,
   178,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   131,   151,
   nil,   nil,   152,   nil,   167,   nil,   183,   166,   nil,   178,
   137,   187,   nil,   139,   108,   nil,    88,   nil,   134,   nil,
   187,   188,   189,   192,   193,   187,   185,   nil,   196,   128,
   197,   198,   187,   nil,   200,   190,   nil,   202,   nil,   nil,
   203,   197,     0,   194,   206,   207,   187,   nil,    90,    27,
   nil,   209,   nil,   nil,   210,   211,   -13,   nil,   212,   nil,
   nil,   184,    11,   nil,   nil,   214,   nil,   215,   nil,   nil,
   nil,   nil,   168,   nil,   nil,   nil,   217,   169,   nil,   nil,
   201,   nil,   nil,   nil,   nil,   nil,   220,   221,   222,   nil,
   nil,   223,   218,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   225,   215,   207,   nil,   nil,   nil,   nil,    -9,
    85,   nil,   nil,   nil,   nil,   nil,   nil,   183,   nil,   103,
   nil,   200,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   219,   208,   210,   222,   nil,   nil,
   nil,   nil,   nil,    37,   nil,   212,   214,   nil,   214,   nil ]

racc_action_default = [
    -1,  -161,    -2,    -3,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,
   -21,   -22,  -161,  -161,  -161,  -161,  -161,  -161,  -161,  -161,
  -161,  -161,  -161,   -86,   -88,   -89,  -161,  -161,  -161,   -96,
  -161,  -161,  -106,  -108,  -111,  -112,  -124,  -125,  -161,  -161,
  -136,  -161,  -161,  -161,  -146,  -161,  -151,  -161,  -161,    -4,
  -161,  -161,   -32,   -34,  -161,   -37,  -161,   -45,  -161,   -49,
   -54,   -74,   -76,   -77,  -161,   -57,   -60,   -67,  -161,  -161,
   -84,  -161,   -88,   -89,  -161,   -87,  -161,   -90,   -91,   -92,
  -161,   -94,   -95,  -161,   -98,  -161,  -101,  -161,  -161,  -161,
  -161,  -119,  -107,  -109,  -110,  -113,  -129,  -130,  -131,  -161,
  -127,  -128,  -161,  -135,  -161,  -138,  -139,  -141,  -144,  -161,
  -161,  -149,  -152,  -147,  -153,  -154,  -157,   260,  -161,   -24,
  -161,  -161,  -161,  -161,  -161,  -161,  -161,   -35,  -161,  -161,
   -39,   -41,   -43,   -46,  -161,  -161,   -51,   -52,   -55,   -75,
  -161,  -161,  -161,  -161,   -62,   -64,   -69,   -68,  -161,  -161,
   -79,  -161,   -82,   -83,  -161,  -161,  -120,  -122,  -161,   -97,
  -100,  -161,  -161,  -104,  -114,  -161,  -116,  -161,  -118,  -132,
  -134,  -126,  -131,  -137,  -140,  -142,  -161,  -148,  -150,  -155,
  -161,  -158,  -159,  -160,   -23,   -25,  -161,  -161,  -161,   -29,
   -30,  -161,  -161,   -36,   -38,   -40,   -42,   -44,   -47,   -50,
   -53,   -48,  -161,  -161,  -161,   -61,   -63,   -65,   -66,  -161,
  -161,   -78,   -80,   -81,   -85,  -143,  -121,  -161,   -93,  -161,
  -103,  -161,  -115,  -117,  -133,  -145,  -156,   -26,   -27,   -28,
   -31,   -33,   -56,   -58,  -161,   -67,  -161,  -161,   -73,  -123,
  -102,  -105,   -59,   -69,   -71,  -161,   -69,   -72,  -161,   -70 ]

racc_goto_table = [
    76,    95,   156,   125,   122,    65,    68,    74,   172,   180,
   129,    85,   115,    96,   123,    84,     3,     1,    59,   108,
   112,     2,   128,    62,   135,    64,   139,   209,    75,   151,
   153,   258,   159,   161,    81,    90,   119,    93,   102,   166,
   109,   114,   120,   124,   191,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   173,   nil,
   nil,   nil,   nil,   185,   nil,   nil,   nil,   170,   nil,   nil,
   189,   nil,   nil,   122,   nil,   nil,   175,   183,   195,   187,
   nil,   nil,   229,   234,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   204,
   nil,   nil,   nil,   nil,   nil,   215,   nil,   nil,   nil,   nil,
   nil,   nil,   173,   nil,   nil,   nil,   236,   122,   220,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   253,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   246,   251,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   255 ]

racc_goto_check = [
    32,    47,    34,    60,    64,    25,    27,    27,    49,    56,
    21,    42,    58,    48,    62,    61,     3,     1,     3,    55,
    55,     2,    20,    22,    23,    24,    26,    28,    30,    31,
    33,    35,    38,    39,    40,    44,    61,    45,    50,    51,
    54,    59,    63,    65,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,
   nil,   nil,   nil,    60,   nil,   nil,   nil,    48,   nil,   nil,
    60,   nil,   nil,    64,   nil,   nil,    42,    58,    21,    62,
   nil,   nil,    49,    56,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,    47,   nil,   nil,   nil,    60,    64,    27,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    32,    47,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32 ]

racc_goto_pointer = [
   nil,    17,    21,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -38,   -50,    -1,   -38,     0,   -20,   -38,   -20,  -118,   nil,
     0,   -46,   -28,   -45,   -75,  -225,   nil,   nil,   -46,   -46,
     2,   nil,   -22,   nil,    -3,    -1,   nil,   -39,   -28,   -89,
    -4,   -47,   nil,   nil,    -8,   -28,   -99,   nil,   -37,    -8,
   -54,   -17,   -41,   -12,   -50,   -14,   -82 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    14,    15,    16,    17,    18,    19,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    69,   145,
   nil,   nil,   nil,   nil,   nil,   218,   157,    71,   nil,   nil,
    31,    33,    99,    38,   nil,   nil,    40,    41,   nil,   nil,
    43,   nil,    46,    47,   nil,   nil,   nil,    49,    50,   nil,
   nil,    52,    54,   nil,    56,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 60, :_reduce_none,
  2, 60, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_14,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_22,
  4, 71, :_reduce_none,
  1, 78, :_reduce_none,
  2, 78, :_reduce_none,
  3, 79, :_reduce_26,
  3, 79, :_reduce_27,
  3, 79, :_reduce_28,
  2, 79, :_reduce_none,
  4, 77, :_reduce_30,
  5, 76, :_reduce_31,
  0, 81, :_reduce_none,
  3, 81, :_reduce_33,
  1, 80, :_reduce_34,
  2, 80, :_reduce_35,
  4, 75, :_reduce_36,
  1, 82, :_reduce_37,
  3, 82, :_reduce_38,
  1, 84, :_reduce_none,
  2, 84, :_reduce_none,
  1, 84, :_reduce_none,
  2, 84, :_reduce_none,
  2, 83, :_reduce_43,
  3, 83, :_reduce_44,
  1, 83, :_reduce_45,
  2, 83, :_reduce_46,
  4, 73, :_reduce_47,
  4, 74, :_reduce_48,
  1, 85, :_reduce_49,
  3, 85, :_reduce_50,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  2, 87, :_reduce_none,
  1, 86, :_reduce_54,
  2, 86, :_reduce_55,
  5, 72, :_reduce_56,
  0, 89, :_reduce_57,
  3, 89, :_reduce_58,
  4, 89, :_reduce_59,
  1, 88, :_reduce_60,
  3, 88, :_reduce_61,
  1, 91, :_reduce_none,
  2, 91, :_reduce_63,
  1, 91, :_reduce_none,
  2, 91, :_reduce_65,
  3, 90, :_reduce_66,
  0, 92, :_reduce_67,
  1, 92, :_reduce_68,
  0, 93, :_reduce_69,
  6, 93, :_reduce_70,
  3, 93, :_reduce_71,
  4, 93, :_reduce_72,
  3, 94, :_reduce_73,
  1, 85, :_reduce_74,
  2, 85, :_reduce_75,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  4, 66, :_reduce_78,
  1, 96, :_reduce_79,
  2, 96, :_reduce_80,
  4, 67, :_reduce_81,
  1, 97, :_reduce_82,
  1, 97, :_reduce_83,
  2, 62, :_reduce_84,
  4, 62, :_reduce_85,
  1, 98, :_reduce_none,
  2, 98, :_reduce_87,
  1, 99, :_reduce_88,
  1, 99, :_reduce_89,
  2, 63, :_reduce_90,
  2, 65, :_reduce_91,
  2, 64, :_reduce_92,
  4, 64, :_reduce_93,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 101, :_reduce_96,
  3, 101, :_reduce_97,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 68, :_reduce_100,
  2, 68, :_reduce_101,
  5, 68, :_reduce_102,
  4, 68, :_reduce_103,
  1, 107, :_reduce_104,
  3, 107, :_reduce_105,
  1, 104, :_reduce_106,
  2, 104, :_reduce_107,
  1, 104, :_reduce_none,
  1, 108, :_reduce_109,
  1, 108, :_reduce_110,
  1, 108, :_reduce_111,
  1, 108, :_reduce_112,
  2, 108, :_reduce_113,
  2, 106, :_reduce_114,
  3, 106, :_reduce_115,
  2, 106, :_reduce_116,
  3, 106, :_reduce_117,
  2, 106, :_reduce_118,
  1, 106, :_reduce_119,
  2, 100, :_reduce_120,
  3, 100, :_reduce_121,
  1, 109, :_reduce_122,
  3, 109, :_reduce_123,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 111, :_reduce_126,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  0, 114, :_reduce_131,
  1, 114, :_reduce_132,
  4, 110, :_reduce_133,
  3, 110, :_reduce_134,
  2, 70, :_reduce_135,
  1, 115, :_reduce_136,
  3, 115, :_reduce_137,
  2, 115, :_reduce_138,
  1, 117, :_reduce_none,
  2, 117, :_reduce_none,
  2, 116, :_reduce_141,
  3, 116, :_reduce_142,
  4, 69, :_reduce_143,
  2, 69, :_reduce_144,
  4, 69, :_reduce_145,
  1, 119, :_reduce_146,
  2, 119, :_reduce_147,
  3, 119, :_reduce_148,
  1, 121, :_reduce_none,
  2, 121, :_reduce_none,
  1, 120, :_reduce_151,
  2, 120, :_reduce_152,
  2, 122, :_reduce_153,
  1, 123, :_reduce_154,
  2, 123, :_reduce_155,
  3, 123, :_reduce_156,
  1, 118, :_reduce_157,
  2, 118, :_reduce_158,
  1, 124, :_reduce_159,
  1, 124, :_reduce_160 ]

racc_reduce_n = 161

racc_shift_n = 260

racc_token_table = {
  false => 0,
  :error => 1,
  :BLANK => 2,
  :TEAMS => 3,
  :NEWLINE => 4,
  "---" => 5,
  :TEXT => 6,
  "--" => 7,
  "-" => 8,
  :PROP_ATTENDANCE => 9,
  :PROP_NUM => 10,
  :PROP_END => 11,
  :PROP_REFEREE => 12,
  ";" => 13,
  :ATTENDANCE => 14,
  :PROP_NAME => 15,
  :ENCLOSED_NAME => 16,
  :PROP_PENALTIES => 17,
  "," => 18,
  :SCORE => 19,
  :PROP_YELLOWCARDS => 20,
  :PROP_REDCARDS => 21,
  :MINUTE => 22,
  :PROP => 23,
  :COACH => 24,
  "(" => 25,
  ")" => 26,
  "[" => 27,
  "]" => 28,
  :YELLOW_CARD => 29,
  :RED_CARD => 30,
  :GROUP_DEF => 31,
  "|" => 32,
  :TEAM => 33,
  :ROUND_DEF => 34,
  :DATE => 35,
  :DURATION => 36,
  :DATETIME => 37,
  :GROUP => 38,
  :ROUND_OUTLINE => 39,
  "/" => 40,
  :ROUND => 41,
  :ORD => 42,
  :TIME => 43,
  :WDAY => 44,
  :STATUS => 45,
  :NOTE => 46,
  "@" => 47,
  :TIMEZONE => 48,
  :GEO => 49,
  :VS => 50,
  :SCORE_MORE => 51,
  :SCORE_NOTE => 52,
  :PLAYER => 53,
  :PROP_GOALS => 54,
  :NONE => 55,
  :OG => 56,
  :PEN => 57 }

racc_nt_base = 58

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "BLANK",
  "TEAMS",
  "NEWLINE",
  "\"---\"",
  "TEXT",
  "\"--\"",
  "\"-\"",
  "PROP_ATTENDANCE",
  "PROP_NUM",
  "PROP_END",
  "PROP_REFEREE",
  "\";\"",
  "ATTENDANCE",
  "PROP_NAME",
  "ENCLOSED_NAME",
  "PROP_PENALTIES",
  "\",\"",
  "SCORE",
  "PROP_YELLOWCARDS",
  "PROP_REDCARDS",
  "MINUTE",
  "PROP",
  "COACH",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "YELLOW_CARD",
  "RED_CARD",
  "GROUP_DEF",
  "\"|\"",
  "TEAM",
  "ROUND_DEF",
  "DATE",
  "DURATION",
  "DATETIME",
  "GROUP",
  "ROUND_OUTLINE",
  "\"/\"",
  "ROUND",
  "ORD",
  "TIME",
  "WDAY",
  "STATUS",
  "NOTE",
  "\"@\"",
  "TIMEZONE",
  "GEO",
  "VS",
  "SCORE_MORE",
  "SCORE_NOTE",
  "PLAYER",
  "PROP_GOALS",
  "NONE",
  "OG",
  "PEN",
  "$start",
  "document",
  "elements",
  "element",
  "date_header",
  "group_header",
  "round_header",
  "round_outline",
  "group_def",
  "round_def",
  "match_line",
  "goal_lines",
  "goal_lines_alt",
  "teams_list",
  "lineup_lines",
  "yellowcard_lines",
  "redcard_lines",
  "penalties_lines",
  "referee_line",
  "attendance_line",
  "list",
  "list_item",
  "referee",
  "attendance_opt",
  "penalties_body",
  "penalty",
  "penalty_sep",
  "card_body",
  "player_w_minute",
  "card_sep",
  "lineup",
  "coach_opt",
  "lineup_name",
  "lineup_sep",
  "lineup_card_opts",
  "lineup_sub_opts",
  "card",
  "card_type",
  "team_values",
  "round_date_opts",
  "date_header_body",
  "date_header_date",
  "geo_opts",
  "round_values",
  "group_sep",
  "round_sep",
  "match_opts",
  "match",
  "more_match_opts",
  "more_matches",
  "date_opts",
  "geo_values",
  "match_result",
  "match_fixture",
  "match_sep",
  "score",
  "score_note_opt",
  "goals_alt",
  "goal_alt",
  "goal_alt_sep",
  "minute",
  "goal_lines_body",
  "goals",
  "goal_sep",
  "goal",
  "minutes",
  "minute_opts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_14(val, _values, result)
     trace( "REDUCE BLANK" )
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_22(val, _values, result)
     puts "!! skipping invalid content (trying to recover from parse error):"
                pp val[0] 
                @errors << "parser error (recover) - skipping #{val[0].pretty_inspect}"

    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_26(val, _values, result)
      puts "level 3"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_27(val, _values, result)
      puts "level 2 #{val[1]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_28(val, _values, result)
      puts "level 1 #{val[1]}"
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_30(val, _values, result)
                                     @tree << AttendanceLine.new( att: val[1][1][:value] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_31(val, _values, result)
                                   kwargs = val[1] 
                               @tree << RefereeLine.new( **kwargs ) 

    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_33(val, _values, result)
                                     @tree << AttendanceLine.new( att: val[2][1][:value] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_34(val, _values, result)
      result = { name: val[0]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_35(val, _values, result)
      result = { name: val[0], country: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_36(val, _values, result)
                                   @tree << PenaltiesLine.new( penalties: val[1] )                                                            

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_37(val, _values, result)
      result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_38(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_43(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_44(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1],
                                                       note: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_45(val, _values, result)
                                     result = Penalty.new( name: val[0] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_46(val, _values, result)
                                     result = Penalty.new( name: val[0],
                                                       note: val[1] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_47(val, _values, result)
                                   @tree << CardsLine.new( type: 'Y', bookings: val[1] )                               

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_48(val, _values, result)
                                   @tree << CardsLine.new( type: 'R', bookings: val[1] )                    

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_49(val, _values, result)
       result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_50(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_54(val, _values, result)
     result = Booking.new( name: val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_55(val, _values, result)
     result = Booking.new( name: val[0], minute: val[1][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_56(val, _values, result)
                              kwargs = { team:    val[0],
                                     lineup:  val[1]  }.merge( val[2] ) 
                          @tree << LineupLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_57(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 169)
  def _reduce_58(val, _values, result)
      result = { coach: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_59(val, _values, result)
      result = { coach: val[3] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_60(val, _values, result)
     result = [[val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 177)
  def _reduce_61(val, _values, result)
                           ## if lineup_sep is -  start a new sub array!!
                       if val[1] == '-'
                          result << [val[2]]
                       else
                          result[-1] << val[2]
                       end

    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.y', 187)
  def _reduce_63(val, _values, result)
     result = val[0]
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.y', 189)
  def _reduce_65(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 194)
  def _reduce_66(val, _values, result)
                                  kwargs = { name: val[0] }.merge( val[1] ).merge( val[2] )
                              result = Lineup.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 198)
  def _reduce_67(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 199)
  def _reduce_68(val, _values, result)
     result = { card: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 216)
  def _reduce_69(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 219)
  def _reduce_70(val, _values, result)
                                  kwargs = { name: val[1] }.merge( val[2] ).merge( val[4] )
                              sub    = Sub.new( sub:    Lineup.new( **kwargs ),
                                                minute: Minute.new(val[3][1]) 
                                              )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 227)
  def _reduce_71(val, _values, result)
                                  sub = Sub.new( sub: val[1] )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 233)
  def _reduce_72(val, _values, result)
                                  sub = Sub.new( sub:    val[2],
                                             minute: Minute.new(val[1][1]) 
                                            )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 243)
  def _reduce_73(val, _values, result)
                                  kwargs = val[1]
                              result = Card.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 248)
  def _reduce_74(val, _values, result)
     result = { name: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 251)
  def _reduce_75(val, _values, result)
     result = { name: val[0],
                                        minute: Minute.new(val[1][1]) } 

    result
  end
.,.,

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.y', 265)
  def _reduce_78(val, _values, result)
                          @tree << GroupDef.new( name:  val[0],
                                             teams: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 271)
  def _reduce_79(val, _values, result)
                                                   result = val
                                               ## e.g. val is ["Austria"] 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 275)
  def _reduce_80(val, _values, result)
                                                   result.push( val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 284)
  def _reduce_81(val, _values, result)
                          kwargs = { name: val[0] }.merge( val[2] )
                      @tree<< RoundDef.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 289)
  def _reduce_82(val, _values, result)
     result = { date: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 290)
  def _reduce_83(val, _values, result)
     result = { duration: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 296)
  def _reduce_84(val, _values, result)
                         kwargs = {}.merge( val[0] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 301)
  def _reduce_85(val, _values, result)
                         kwargs = {}.merge( val[1] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.y', 307)
  def _reduce_87(val, _values, result)
      result = {}.merge( val[0], val[1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 310)
  def _reduce_88(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 311)
  def _reduce_89(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 318)
  def _reduce_90(val, _values, result)
                         @tree <<  GroupHeader.new( name: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 328)
  def _reduce_91(val, _values, result)
                                      @tree << RoundOutline.new( outline: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 337)
  def _reduce_92(val, _values, result)
                         @tree <<  RoundHeader.new( names: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 341)
  def _reduce_93(val, _values, result)
                        @tree <<  RoundHeader.new( names: val[0], group: val[2] )  

    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

module_eval(<<'.,.,', 'parser.y', 346)
  def _reduce_96(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 347)
  def _reduce_97(val, _values, result)
       result.push( val[2] )
    result
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.y', 357)
  def _reduce_100(val, _values, result)
                           kwargs = {}.merge( val[0], val[1], val[2] )
                       @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 362)
  def _reduce_101(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 370)
  def _reduce_102(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )
                     
                      ## add more match fixtures
                      val[3].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 380)
  def _reduce_103(val, _values, result)
                          kwargs = val[0]
                      @tree << MatchLine.new( **kwargs )
 
                      ## add more match fixtures
                      val[2].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 394)
  def _reduce_104(val, _values, result)
                                        trace( "REDUCE => more_matches : match" ) 
                                    result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 399)
  def _reduce_105(val, _values, result)
                                         trace( "REDUCE => more_matches : more_matches ',' match" ) 
                                     result.push( val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 405)
  def _reduce_106(val, _values, result)
       result = { ord: val[0][1][:value] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 406)
  def _reduce_107(val, _values, result)
       result = { ord: val[0][1][:value] }.merge( val[1] )
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.y', 410)
  def _reduce_109(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 411)
  def _reduce_110(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 412)
  def _reduce_111(val, _values, result)
       result = { time: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 413)
  def _reduce_112(val, _values, result)
       result = { wday: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 414)
  def _reduce_113(val, _values, result)
       result = { wday: val[0][1], time: val[1][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 428)
  def _reduce_114(val, _values, result)
                          ## todo - add possible status_notes too!!! 
                      result = { status: val[0][1][:status] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 433)
  def _reduce_115(val, _values, result)
                         result = { status: val[0][1][:status] }.merge( val[1] ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 435)
  def _reduce_116(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 436)
  def _reduce_117(val, _values, result)
     result = { note: val[1] }.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 437)
  def _reduce_118(val, _values, result)
     result = { note: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 440)
  def _reduce_119(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 446)
  def _reduce_120(val, _values, result)
     result = { geo: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 447)
  def _reduce_121(val, _values, result)
     result = { geo: val[1], timezone: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 450)
  def _reduce_122(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 451)
  def _reduce_123(val, _values, result)
      result.push( val[2] )
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.y', 459)
  def _reduce_126(val, _values, result)
                                   trace( "RECUDE match_fixture" )
                               result = { team1: val[0],
                                          team2: val[2] }   

    result
  end
.,.,

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.y', 471)
  def _reduce_131(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 472)
  def _reduce_132(val, _values, result)
     result = { score_note: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 477)
  def _reduce_133(val, _values, result)
                               trace( "REDUCE => match_result : TEAM score TEAM" )
                           result = { team1: val[0],
                                      team2: val[2],
                                      score: val[1][1]
                                    }.merge( val[3] )   
                           pp result

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 486)
  def _reduce_134(val, _values, result)
                              trace( "REDUCE  => match_result : match_fixture score" )
                          result = { score: val[1][1] }.merge( val[0] ).merge( val[2] )  
                          pp result

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 512)
  def _reduce_135(val, _values, result)
                                 @tree << GoalLineAlt.new( goals: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 516)
  def _reduce_136(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 518)
  def _reduce_137(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 520)
  def _reduce_138(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

module_eval(<<'.,.,', 'parser.y', 528)
  def _reduce_141(val, _values, result)
                               result = GoalAlt.new( score:   val[0],
                                                 player:  val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 533)
  def _reduce_142(val, _values, result)
                               result = GoalAlt.new( score:  val[0],
                                                 player: val[1],
                                                 minute: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 545)
  def _reduce_143(val, _values, result)
                           kwargs = val[1]
                       @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 550)
  def _reduce_144(val, _values, result)
                             kwargs = val[0]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 555)
  def _reduce_145(val, _values, result)
                             kwargs = val[1]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 560)
  def _reduce_146(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: [] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 563)
  def _reduce_147(val, _values, result)
      result = { goals1: [],
                                                              goals2: val[1] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 566)
  def _reduce_148(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: val[2] }

    result
  end
.,.,

# reduce 149 omitted

# reduce 150 omitted

module_eval(<<'.,.,', 'parser.y', 582)
  def _reduce_151(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 583)
  def _reduce_152(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 599)
  def _reduce_153(val, _values, result)
                      result = Goal.new( player:  val[0],
                                     minutes: val[1] )   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 611)
  def _reduce_154(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 612)
  def _reduce_155(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 613)
  def _reduce_156(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 619)
  def _reduce_157(val, _values, result)
                            kwargs = {}.merge( val[0][1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 624)
  def _reduce_158(val, _values, result)
                            kwargs = { }.merge( val[0][1] ).merge( val[1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 628)
  def _reduce_159(val, _values, result)
      result = { og: true }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 629)
  def _reduce_160(val, _values, result)
      result = { pen: true }
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RaccMatchParser
