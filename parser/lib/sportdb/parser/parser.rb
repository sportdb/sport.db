#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.y".
#

require 'racc/parser.rb'
class RaccMatchParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    19,    12,    20,   100,   115,   203,   166,    54,    21,   107,
    56,   216,   168,    22,    95,   219,    47,   237,    23,    24,
   110,    25,    47,    29,   202,    91,   220,    26,   220,    44,
    27,    31,   101,    32,    33,    53,    35,    38,    40,    41,
   215,    19,    12,    20,    95,    81,    53,    49,    51,    21,
   169,    92,    94,    81,    22,   163,   104,    47,   210,    23,
    24,    62,    25,   232,    29,   100,    58,    61,    26,    72,
    44,    27,    31,   234,    32,    33,    65,    35,    38,    40,
    41,    92,    94,    81,   211,    65,    83,    53,    49,    51,
    88,    67,    68,   105,   101,   208,    77,    86,    78,    65,
    67,    68,   138,   139,   243,   124,   127,   125,   126,   154,
   155,    53,   235,    51,    67,    68,   130,    97,    85,    98,
   147,   132,   133,    73,    40,    41,   136,   146,   144,   142,
   180,   138,   139,    62,   138,   139,   120,   184,    74,    61,
   124,   127,   125,   126,    53,    75,    51,   182,   183,    81,
  -103,  -104,    82,    44,    99,   111,   112,    53,   120,   121,
   128,   129,   134,   135,   140,   141,   150,   152,   156,   157,
   159,   160,   -93,   161,    44,   170,   171,   172,    47,   174,
   120,   176,    53,   178,    53,   186,   187,   188,   189,   190,
   191,   192,   194,   195,   196,   197,    65,   199,   200,   201,
    72,   205,   206,   208,   212,   213,   214,   217,    44,   221,
   222,   223,    53,   120,   225,   226,   227,   228,   229,   230,
   231,   236,    44,   239,   150,   241,    72,   244,   208,   246 ]

racc_action_check = [
     0,     0,     0,    43,    50,   144,    92,     1,     0,    45,
    20,   158,    93,     0,    37,   164,     0,   218,     0,     0,
    45,     0,    45,     0,   144,    37,   164,     0,   218,     0,
     0,     0,    43,     0,     0,    50,     0,     0,     0,     0,
   158,     2,     2,     2,    89,    92,     0,     0,     0,     2,
    93,    37,    37,    37,     2,    89,    44,     2,   151,     2,
     2,    22,     2,   208,     2,    44,    21,    22,     2,    25,
     2,     2,     2,   208,     2,     2,    23,     2,     2,     2,
     2,    89,    89,    89,   151,    24,    34,     2,     2,     2,
    34,    23,    23,    44,    44,   240,    29,    34,    29,   150,
    24,    24,   209,   209,   240,    56,    56,    56,    56,    74,
    74,    29,   209,    29,   150,   150,    59,    38,    34,    38,
    70,    59,    59,    26,    38,    38,    63,    70,    70,    69,
   118,    63,    63,   131,    69,    69,   118,   122,    27,   131,
   122,   122,   122,   122,    49,    28,    49,   120,   120,    30,
    31,    32,    33,    36,    41,    47,    48,    51,    53,    54,
    57,    58,    61,    62,    65,    66,    72,    73,    76,    79,
    81,    84,    86,    87,    91,    94,   103,   106,   108,   110,
   111,   113,   114,   115,   117,   124,   125,   126,   127,   128,
   129,   130,   132,   133,   134,   136,   137,   139,   142,   143,
   145,   146,   147,   148,   153,   156,   157,   160,   163,   167,
   169,   176,   177,   180,   186,   187,   188,   191,   201,   202,
   203,   216,   220,   231,   232,   233,   234,   242,   243,   245 ]

racc_action_pointer = [
    -1,     7,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     6,    55,    50,    65,    74,    58,    94,   109,   141,    64,
   106,   120,   121,   148,    82,   nil,   123,    10,    85,   nil,
   nil,   115,   nil,   -14,    48,     5,   nil,   108,   152,    97,
   -12,   110,   nil,   137,   159,   nil,   100,   150,   149,   106,
   nil,   151,   145,   116,   nil,   143,   144,   nil,   nil,   119,
   112,   nil,   142,   137,    77,   nil,   143,   nil,   nil,   144,
   nil,   164,   nil,   nil,   136,   nil,   135,   136,   nil,    40,
   nil,   144,     2,     8,   171,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   146,   nil,   nil,   147,   nil,   161,   nil,
   175,   159,   nil,   171,   135,   179,   nil,   137,   115,   nil,
    97,   nil,   135,   nil,   179,   180,   181,   184,   185,   179,
   187,   122,   188,   189,   176,   nil,   191,   185,   nil,   193,
   nil,   nil,   194,   189,     1,   189,   197,   198,   191,   nil,
    88,    54,   nil,   200,   nil,   nil,   201,   202,    -4,   nil,
   203,   nil,   nil,   178,    11,   nil,   nil,   205,   nil,   206,
   nil,   nil,   nil,   nil,   nil,   nil,   207,   165,   nil,   nil,
   192,   nil,   nil,   nil,   nil,   nil,   210,   211,   212,   nil,
   nil,   204,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   214,   208,   197,   nil,   nil,   nil,   nil,    52,    87,
   nil,   nil,   nil,   nil,   nil,   nil,   215,   nil,    13,   nil,
   192,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   212,   200,   212,   215,   nil,   nil,   nil,   nil,   nil,
    83,   nil,   214,   216,   nil,   216,   nil ]

racc_action_default = [
    -1,  -153,    -2,    -3,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,
  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
   -81,   -83,   -84,  -153,  -153,   -90,  -153,  -153,  -100,  -102,
  -105,  -106,  -118,  -119,  -153,  -153,  -128,  -153,  -153,  -153,
  -138,  -153,  -143,  -153,  -153,    -4,  -153,  -153,   -29,  -153,
   -32,  -153,   -40,  -153,   -44,   -49,   -69,   -71,   -72,  -153,
   -52,   -55,   -62,  -153,  -153,   -79,  -153,   -83,   -84,  -153,
   -82,  -153,   -85,   -86,  -153,   -88,   -89,  -153,   -92,  -153,
   -95,  -153,  -153,  -153,  -153,  -113,  -101,  -103,  -104,  -107,
  -123,  -124,  -126,  -153,  -121,  -122,  -153,  -127,  -153,  -130,
  -131,  -133,  -136,  -153,  -153,  -141,  -144,  -139,  -145,  -146,
  -149,   247,  -153,   -22,  -153,  -153,  -153,  -153,  -153,  -153,
  -153,  -153,   -34,   -36,   -38,   -41,  -153,  -153,   -46,   -47,
   -50,   -70,  -153,  -153,  -153,  -153,   -57,   -59,   -64,   -63,
  -153,  -153,   -74,  -153,   -77,   -78,  -153,  -153,  -114,  -116,
  -153,   -91,   -94,  -153,  -153,   -98,  -108,  -153,  -110,  -153,
  -112,  -120,  -125,  -129,  -132,  -134,  -153,  -140,  -142,  -147,
  -153,  -150,  -151,  -152,   -21,   -23,  -153,  -153,  -153,   -27,
   -28,  -153,   -31,   -33,   -35,   -37,   -39,   -42,   -45,   -48,
   -43,  -153,  -153,  -153,   -56,   -58,   -60,   -61,  -153,  -153,
   -73,   -75,   -76,   -80,  -135,  -115,  -153,   -87,  -153,   -97,
  -153,  -109,  -111,  -137,  -148,   -24,   -25,   -26,   -30,   -51,
   -53,  -153,   -62,  -153,  -153,   -68,  -117,   -96,   -99,   -54,
   -64,   -66,  -153,   -64,   -67,  -153,   -65 ]

racc_goto_table = [
    71,    89,   148,    63,    69,   119,   116,    60,   164,   123,
    80,   109,    90,   117,    79,     3,     1,    55,   102,   106,
     2,   122,    57,    59,   131,   198,    70,   143,   145,   245,
   151,   153,    76,    84,   113,    87,    96,   158,   103,   108,
   114,   118,   181,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   165,   nil,   nil,   nil,
   nil,   nil,   nil,   175,   162,   nil,   nil,   nil,   nil,   nil,
   179,   nil,   167,   116,   173,   185,   177,   nil,   nil,   nil,
   218,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   193,   nil,   nil,   nil,
   204,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   165,   nil,
   209,   nil,   224,   116,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   240,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   233,   nil,   238,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   242 ]

racc_goto_check = [
    29,    44,    31,    24,    24,    56,    60,    22,    46,    19,
    39,    54,    45,    58,    57,     3,     1,     3,    52,    52,
     2,    18,    20,    21,    23,    25,    27,    28,    30,    32,
    35,    36,    37,    41,    57,    42,    47,    48,    51,    55,
    59,    61,    62,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,   nil,   nil,    56,    45,   nil,   nil,   nil,   nil,   nil,
    56,   nil,    39,    60,    54,    19,    58,   nil,   nil,   nil,
    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
    29,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    44,   nil,
    24,   nil,    56,    60,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    29,   nil,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29 ]

racc_goto_pointer = [
   nil,    16,    20,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -35,   -47,
     1,     1,   -15,   -35,   -20,  -112,   nil,     1,   -43,   -25,
   -42,   -70,  -214,   nil,   nil,   -43,   -43,     3,   nil,   -20,
   nil,    -1,     1,   nil,   -35,   -25,   -83,    -2,   -44,   nil,
   nil,    -6,   -25,   nil,   -34,    -6,   -48,   -15,   -38,   -10,
   -44,   -12,   -78 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,
    10,    11,    13,    14,    15,    16,    17,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    64,   137,   nil,   nil,   nil,
   nil,   nil,   207,   149,    66,   nil,   nil,    28,    30,    93,
    34,   nil,   nil,    36,    37,   nil,   nil,    39,   nil,    42,
    43,   nil,   nil,    45,    46,   nil,   nil,    48,    50,   nil,
    52,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 54, :_reduce_none,
  2, 54, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_13,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_20,
  4, 64, :_reduce_none,
  1, 70, :_reduce_none,
  2, 70, :_reduce_none,
  3, 71, :_reduce_24,
  3, 71, :_reduce_25,
  3, 71, :_reduce_26,
  2, 71, :_reduce_none,
  4, 69, :_reduce_28,
  1, 72, :_reduce_29,
  4, 72, :_reduce_30,
  4, 68, :_reduce_31,
  1, 73, :_reduce_32,
  3, 73, :_reduce_33,
  1, 75, :_reduce_none,
  2, 75, :_reduce_none,
  1, 75, :_reduce_none,
  2, 75, :_reduce_none,
  2, 74, :_reduce_38,
  3, 74, :_reduce_39,
  1, 74, :_reduce_40,
  2, 74, :_reduce_41,
  4, 66, :_reduce_42,
  4, 67, :_reduce_43,
  1, 76, :_reduce_44,
  3, 76, :_reduce_45,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  2, 78, :_reduce_none,
  1, 77, :_reduce_49,
  2, 77, :_reduce_50,
  5, 65, :_reduce_51,
  0, 80, :_reduce_52,
  3, 80, :_reduce_53,
  4, 80, :_reduce_54,
  1, 79, :_reduce_55,
  3, 79, :_reduce_56,
  1, 82, :_reduce_none,
  2, 82, :_reduce_58,
  1, 82, :_reduce_none,
  2, 82, :_reduce_60,
  3, 81, :_reduce_61,
  0, 83, :_reduce_62,
  1, 83, :_reduce_63,
  0, 84, :_reduce_64,
  6, 84, :_reduce_65,
  3, 84, :_reduce_66,
  4, 84, :_reduce_67,
  3, 85, :_reduce_68,
  1, 76, :_reduce_69,
  2, 76, :_reduce_70,
  1, 86, :_reduce_none,
  1, 86, :_reduce_none,
  4, 59, :_reduce_73,
  1, 87, :_reduce_74,
  2, 87, :_reduce_75,
  4, 60, :_reduce_76,
  1, 88, :_reduce_77,
  1, 88, :_reduce_78,
  2, 56, :_reduce_79,
  4, 56, :_reduce_80,
  1, 89, :_reduce_none,
  2, 89, :_reduce_82,
  1, 90, :_reduce_83,
  1, 90, :_reduce_84,
  2, 57, :_reduce_85,
  2, 58, :_reduce_86,
  4, 58, :_reduce_87,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 92, :_reduce_90,
  3, 92, :_reduce_91,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  3, 61, :_reduce_94,
  2, 61, :_reduce_95,
  5, 61, :_reduce_96,
  4, 61, :_reduce_97,
  1, 98, :_reduce_98,
  3, 98, :_reduce_99,
  1, 95, :_reduce_100,
  2, 95, :_reduce_101,
  1, 95, :_reduce_none,
  1, 99, :_reduce_103,
  1, 99, :_reduce_104,
  1, 99, :_reduce_105,
  1, 99, :_reduce_106,
  2, 99, :_reduce_107,
  2, 97, :_reduce_108,
  3, 97, :_reduce_109,
  2, 97, :_reduce_110,
  3, 97, :_reduce_111,
  2, 97, :_reduce_112,
  1, 97, :_reduce_113,
  2, 91, :_reduce_114,
  3, 91, :_reduce_115,
  1, 100, :_reduce_116,
  3, 100, :_reduce_117,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  3, 102, :_reduce_120,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 101, :_reduce_125,
  2, 101, :_reduce_126,
  2, 63, :_reduce_127,
  1, 105, :_reduce_128,
  3, 105, :_reduce_129,
  2, 105, :_reduce_130,
  1, 107, :_reduce_none,
  2, 107, :_reduce_none,
  2, 106, :_reduce_133,
  3, 106, :_reduce_134,
  4, 62, :_reduce_135,
  2, 62, :_reduce_136,
  4, 62, :_reduce_137,
  1, 109, :_reduce_138,
  2, 109, :_reduce_139,
  3, 109, :_reduce_140,
  1, 111, :_reduce_none,
  2, 111, :_reduce_none,
  1, 110, :_reduce_143,
  2, 110, :_reduce_144,
  2, 112, :_reduce_145,
  1, 113, :_reduce_146,
  2, 113, :_reduce_147,
  3, 113, :_reduce_148,
  1, 108, :_reduce_149,
  2, 108, :_reduce_150,
  1, 114, :_reduce_151,
  1, 114, :_reduce_152 ]

racc_reduce_n = 153

racc_shift_n = 247

racc_token_table = {
  false => 0,
  :error => 1,
  :BLANK => 2,
  :TEAMS => 3,
  :NEWLINE => 4,
  "---" => 5,
  :TEXT => 6,
  "--" => 7,
  "-" => 8,
  :PROP_REFEREE => 9,
  :PROP_END => 10,
  :PROP_NAME => 11,
  "(" => 12,
  ")" => 13,
  :PROP_PENALTIES => 14,
  "," => 15,
  ";" => 16,
  :SCORE => 17,
  :ENCLOSED_NAME => 18,
  :PROP_YELLOWCARDS => 19,
  :PROP_REDCARDS => 20,
  :MINUTE => 21,
  :PROP => 22,
  :COACH => 23,
  "[" => 24,
  "]" => 25,
  :YELLOW_CARD => 26,
  :RED_CARD => 27,
  :GROUP_DEF => 28,
  "|" => 29,
  :TEAM => 30,
  :ROUND_DEF => 31,
  :DATE => 32,
  :DURATION => 33,
  :DATETIME => 34,
  :GROUP => 35,
  "/" => 36,
  :ROUND => 37,
  :ORD => 38,
  :TIME => 39,
  :WDAY => 40,
  :STATUS => 41,
  :NOTE => 42,
  "@" => 43,
  :TIMEZONE => 44,
  :VS => 45,
  :SCORE_MORE => 46,
  :PLAYER => 47,
  :PROP_GOALS => 48,
  :NONE => 49,
  :OG => 50,
  :PEN => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "BLANK",
  "TEAMS",
  "NEWLINE",
  "\"---\"",
  "TEXT",
  "\"--\"",
  "\"-\"",
  "PROP_REFEREE",
  "PROP_END",
  "PROP_NAME",
  "\"(\"",
  "\")\"",
  "PROP_PENALTIES",
  "\",\"",
  "\";\"",
  "SCORE",
  "ENCLOSED_NAME",
  "PROP_YELLOWCARDS",
  "PROP_REDCARDS",
  "MINUTE",
  "PROP",
  "COACH",
  "\"[\"",
  "\"]\"",
  "YELLOW_CARD",
  "RED_CARD",
  "GROUP_DEF",
  "\"|\"",
  "TEAM",
  "ROUND_DEF",
  "DATE",
  "DURATION",
  "DATETIME",
  "GROUP",
  "\"/\"",
  "ROUND",
  "ORD",
  "TIME",
  "WDAY",
  "STATUS",
  "NOTE",
  "\"@\"",
  "TIMEZONE",
  "VS",
  "SCORE_MORE",
  "PLAYER",
  "PROP_GOALS",
  "NONE",
  "OG",
  "PEN",
  "$start",
  "document",
  "elements",
  "element",
  "date_header",
  "group_header",
  "round_header",
  "group_def",
  "round_def",
  "match_line",
  "goal_lines",
  "goal_lines_alt",
  "teams_list",
  "lineup_lines",
  "yellowcard_lines",
  "redcard_lines",
  "penalties_lines",
  "referee_line",
  "list",
  "list_item",
  "referee",
  "penalties_body",
  "penalty",
  "penalty_sep",
  "card_body",
  "player_w_minute",
  "card_sep",
  "lineup",
  "coach_opt",
  "lineup_name",
  "lineup_sep",
  "lineup_card_opts",
  "lineup_sub_opts",
  "card",
  "card_type",
  "team_values",
  "round_date_opts",
  "date_header_body",
  "date_header_date",
  "geo_opts",
  "round_values",
  "group_sep",
  "round_sep",
  "match_opts",
  "match",
  "more_match_opts",
  "more_matches",
  "date_opts",
  "geo_values",
  "match_result",
  "match_fixture",
  "match_sep",
  "score",
  "goals_alt",
  "goal_alt",
  "goal_alt_sep",
  "minute",
  "goal_lines_body",
  "goals",
  "goal_sep",
  "goal",
  "minutes",
  "minute_opts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_13(val, _values, result)
     trace( "REDUCE BLANK" )
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_20(val, _values, result)
     puts "!! skipping invalid content (trying to recover from parse error):"
                pp val[0] 
                @errors << "parser error (recover) - skipping #{val[0].pretty_inspect}"

    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_24(val, _values, result)
      puts "level 3"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_25(val, _values, result)
      puts "level 2 #{val[1]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_26(val, _values, result)
      puts "level 1 #{val[1]}"
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_28(val, _values, result)
                                   kwargs = val[1] 
                               @tree << RefereeLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_29(val, _values, result)
      result = { name: val[0]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_30(val, _values, result)
      result = { name: val[0], country: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_31(val, _values, result)
                                   @tree << PenaltiesLine.new( penalties: val[1] )                                                            

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_32(val, _values, result)
      result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_33(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_38(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_39(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1],
                                                       note: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_40(val, _values, result)
                                     result = Penalty.new( name: val[0] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_41(val, _values, result)
                                     result = Penalty.new( name: val[0],
                                                       note: val[1] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_42(val, _values, result)
                                   @tree << CardsLine.new( type: 'Y', bookings: val[1] )                               

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_43(val, _values, result)
                                   @tree << CardsLine.new( type: 'R', bookings: val[1] )                    

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_44(val, _values, result)
       result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_45(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_49(val, _values, result)
     result = Booking.new( name: val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_50(val, _values, result)
     result = Booking.new( name: val[0], minute: val[1][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_51(val, _values, result)
                              kwargs = { team:    val[0],
                                     lineup:  val[1]  }.merge( val[2] ) 
                          @tree << LineupLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_52(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_53(val, _values, result)
      result = { coach: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_54(val, _values, result)
      result = { coach: val[3] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_55(val, _values, result)
     result = [[val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_56(val, _values, result)
                           ## if lineup_sep is -  start a new sub array!!
                       if val[1] == '-'
                          result << [val[2]]
                       else
                          result[-1] << val[2]
                       end

    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_58(val, _values, result)
     result = val[0]
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_60(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_61(val, _values, result)
                                  kwargs = { name: val[0] }.merge( val[1] ).merge( val[2] )
                              result = Lineup.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_62(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 186)
  def _reduce_63(val, _values, result)
     result = { card: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 203)
  def _reduce_64(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 206)
  def _reduce_65(val, _values, result)
                                  kwargs = { name: val[1] }.merge( val[2] ).merge( val[4] )
                              sub    = Sub.new( sub:    Lineup.new( **kwargs ),
                                                minute: Minute.new(val[3][1]) 
                                              )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 214)
  def _reduce_66(val, _values, result)
                                  sub = Sub.new( sub: val[1] )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 220)
  def _reduce_67(val, _values, result)
                                  sub = Sub.new( sub:    val[2],
                                             minute: Minute.new(val[1][1]) 
                                            )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 230)
  def _reduce_68(val, _values, result)
                                  kwargs = val[1]
                              result = Card.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 235)
  def _reduce_69(val, _values, result)
     result = { name: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 238)
  def _reduce_70(val, _values, result)
     result = { name: val[0],
                                        minute: Minute.new(val[1][1]) } 

    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.y', 252)
  def _reduce_73(val, _values, result)
                          @tree << GroupDef.new( name:  val[0],
                                             teams: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 258)
  def _reduce_74(val, _values, result)
                                                   result = val
                                               ## e.g. val is ["Austria"] 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 262)
  def _reduce_75(val, _values, result)
                                                   result.push( val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 271)
  def _reduce_76(val, _values, result)
                          kwargs = { name: val[0] }.merge( val[2] )
                      @tree<< RoundDef.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 276)
  def _reduce_77(val, _values, result)
     result = { date: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 277)
  def _reduce_78(val, _values, result)
     result = { duration: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 283)
  def _reduce_79(val, _values, result)
                         kwargs = {}.merge( val[0] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 288)
  def _reduce_80(val, _values, result)
                         kwargs = {}.merge( val[1] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.y', 294)
  def _reduce_82(val, _values, result)
      result = {}.merge( val[0], val[1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 297)
  def _reduce_83(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 298)
  def _reduce_84(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 305)
  def _reduce_85(val, _values, result)
                         @tree <<  GroupHeader.new( name: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 316)
  def _reduce_86(val, _values, result)
                         @tree <<  RoundHeader.new( names: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 320)
  def _reduce_87(val, _values, result)
                        @tree <<  RoundHeader.new( names: val[0], group: val[2] )  

    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.y', 325)
  def _reduce_90(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 326)
  def _reduce_91(val, _values, result)
       result.push( val[2] )
    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.y', 336)
  def _reduce_94(val, _values, result)
                           kwargs = {}.merge( val[0], val[1], val[2] )
                       @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 341)
  def _reduce_95(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 349)
  def _reduce_96(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )
                     
                      ## add more match fixtures
                      val[3].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 359)
  def _reduce_97(val, _values, result)
                          kwargs = val[0]
                      @tree << MatchLine.new( **kwargs )
 
                      ## add more match fixtures
                      val[2].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 373)
  def _reduce_98(val, _values, result)
                                        trace( "REDUCE => more_matches : match" ) 
                                    result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 378)
  def _reduce_99(val, _values, result)
                                         trace( "REDUCE => more_matches : more_matches ',' match" ) 
                                     result.push( val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 384)
  def _reduce_100(val, _values, result)
       result = { ord: val[0][1][:value] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 385)
  def _reduce_101(val, _values, result)
       result = { ord: val[0][1][:value] }.merge( val[1] )
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.y', 389)
  def _reduce_103(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 390)
  def _reduce_104(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 391)
  def _reduce_105(val, _values, result)
       result = { time: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 392)
  def _reduce_106(val, _values, result)
       result = { wday: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 393)
  def _reduce_107(val, _values, result)
       result = { wday: val[0][1], time: val[1][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 407)
  def _reduce_108(val, _values, result)
                          ## todo - add possible status_notes too!!! 
                      result = { status: val[0][1][:status] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 412)
  def _reduce_109(val, _values, result)
                         result = { status: val[0][1][:status] }.merge( val[1] ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 414)
  def _reduce_110(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 415)
  def _reduce_111(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 416)
  def _reduce_112(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 417)
  def _reduce_113(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 423)
  def _reduce_114(val, _values, result)
     result = { geo: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 424)
  def _reduce_115(val, _values, result)
     result = { geo: val[1], timezone: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 427)
  def _reduce_116(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 428)
  def _reduce_117(val, _values, result)
      result.push( val[2] )
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.y', 436)
  def _reduce_120(val, _values, result)
                                   trace( "RECUDE match_fixture" )
                               result = { team1: val[0],
                                          team2: val[2] }   

    result
  end
.,.,

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.y', 450)
  def _reduce_125(val, _values, result)
                               trace( "REDUCE => match_result : TEAM score TEAM" )
                           result = { team1: val[0],
                                      team2: val[2],
                                      score: val[1][1]
                                    }   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 458)
  def _reduce_126(val, _values, result)
                              trace( "REDUCE  => match_result : match_fixture score" )
                          result = { score: val[1][1] }.merge( val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 483)
  def _reduce_127(val, _values, result)
                                 @tree << GoalLineAlt.new( goals: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 487)
  def _reduce_128(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 489)
  def _reduce_129(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 491)
  def _reduce_130(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

# reduce 131 omitted

# reduce 132 omitted

module_eval(<<'.,.,', 'parser.y', 499)
  def _reduce_133(val, _values, result)
                               result = GoalAlt.new( score:   val[0],
                                                 player:  val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 504)
  def _reduce_134(val, _values, result)
                               result = GoalAlt.new( score:  val[0],
                                                 player: val[1],
                                                 minute: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 516)
  def _reduce_135(val, _values, result)
                           kwargs = val[1]
                       @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 521)
  def _reduce_136(val, _values, result)
                             kwargs = val[0]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 526)
  def _reduce_137(val, _values, result)
                             kwargs = val[1]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 531)
  def _reduce_138(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: [] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 534)
  def _reduce_139(val, _values, result)
      result = { goals1: [],
                                                              goals2: val[1] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 537)
  def _reduce_140(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: val[2] }

    result
  end
.,.,

# reduce 141 omitted

# reduce 142 omitted

module_eval(<<'.,.,', 'parser.y', 553)
  def _reduce_143(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 554)
  def _reduce_144(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 570)
  def _reduce_145(val, _values, result)
                      result = Goal.new( player:  val[0],
                                     minutes: val[1] )   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 582)
  def _reduce_146(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 583)
  def _reduce_147(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 584)
  def _reduce_148(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 590)
  def _reduce_149(val, _values, result)
                            kwargs = {}.merge( val[0][1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 595)
  def _reduce_150(val, _values, result)
                            kwargs = { }.merge( val[0][1] ).merge( val[1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 599)
  def _reduce_151(val, _values, result)
      result = { og: true }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 600)
  def _reduce_152(val, _values, result)
      result = { pen: true }
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RaccMatchParser
