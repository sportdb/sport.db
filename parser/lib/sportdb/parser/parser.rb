#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.y".
#

require 'racc/parser.rb'
class RaccMatchParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    18,    12,    19,   158,   101,    71,   188,    72,    20,    51,
   139,    49,   156,    21,    22,    98,   104,    52,    23,   140,
    27,    51,   187,    49,    24,    77,    42,    25,    29,    82,
    30,    31,   109,    33,    36,    38,    39,    80,   159,    18,
    12,    19,    45,    45,    51,    47,    49,    20,    75,    99,
    94,    95,    21,    22,    79,   202,    89,    23,    54,    27,
    51,    94,    95,    24,    89,    42,    25,    29,    85,    30,
    31,   196,    33,    36,    38,    39,   153,   219,   135,    56,
   201,    45,   218,    51,    47,    49,   134,   132,    66,    59,
    86,    88,    75,    59,   197,    59,    67,   205,    86,    88,
    75,    61,    62,   223,    66,    61,    62,    61,    62,   206,
    91,   194,    92,   124,    68,   206,   130,    38,    39,   126,
   127,   174,   126,   127,   118,   121,   119,   120,   126,   127,
   118,   121,   119,   120,   221,   170,    69,   114,   144,   145,
   172,   173,    75,   -92,   -93,    76,    42,    93,   105,   106,
    51,   114,   115,   122,   123,   128,   129,   142,   146,   147,
   149,   150,   -82,   151,    42,   160,   161,   162,    45,   164,
   114,   166,    51,   168,    51,   176,   177,   178,   179,   180,
   181,   182,    59,   184,   185,   186,    66,   190,   191,   139,
   198,   199,   200,   203,    42,   207,   208,   209,    51,   114,
   211,   212,   213,   214,   215,   216,   217,    66,   222,    42,
   225,   226,   227 ]

racc_action_check = [
     0,     0,     0,    87,    43,    27,   132,    27,     0,    47,
    66,    47,    86,     0,     0,    42,    43,     1,     0,    66,
     0,    27,   132,    27,     0,    32,     0,     0,     0,    32,
     0,     0,    48,     0,     0,     0,     0,    32,    87,     2,
     2,     2,     0,    43,     0,     0,     0,     2,    86,    42,
    42,    42,     2,     2,    32,   148,    35,     2,    19,     2,
    48,    41,    41,     2,    83,     2,     2,     2,    35,     2,
     2,   141,     2,     2,     2,     2,    83,   193,    64,    20,
   148,     2,   193,     2,     2,     2,    64,    64,    23,    21,
    35,    35,    35,    22,   141,   140,    24,   154,    83,    83,
    83,    21,    21,   204,   139,    22,    22,   140,   140,   154,
    36,   139,    36,    57,    25,   204,    63,    36,    36,    57,
    57,   116,    63,    63,   116,   116,   116,   116,   195,   195,
    54,    54,    54,    54,   195,   112,    26,   112,    68,    68,
   114,   114,    28,    29,    30,    31,    34,    39,    45,    46,
    49,    51,    52,    55,    56,    59,    60,    67,    70,    73,
    75,    78,    80,    81,    85,    88,    97,   100,   102,   104,
   105,   107,   108,   109,   111,   118,   119,   120,   121,   122,
   123,   124,   125,   127,   130,   131,   133,   134,   135,   137,
   143,   146,   147,   150,   153,   157,   159,   166,   167,   170,
   176,   177,   178,   181,   186,   187,   188,   194,   202,   206,
   217,   218,   220 ]

racc_action_pointer = [
    -1,    17,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    54,
    68,    78,    82,    77,    70,    88,   132,   -24,   102,   116,
   117,   141,    21,   nil,   119,    52,    81,   nil,   nil,   111,
   nil,    18,     7,     0,   nil,   103,   145,   -36,    15,   105,
   nil,   133,   152,   nil,   125,   143,   142,   103,   nil,   137,
   138,   nil,   nil,   106,    70,   nil,    -2,   130,   109,   nil,
   136,   nil,   nil,   137,   nil,   154,   nil,   nil,   129,   nil,
   128,   129,   nil,    60,   nil,   137,     8,    -1,   161,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   139,   nil,   nil,
   140,   nil,   125,   nil,   165,   152,   nil,   161,   127,   169,
   nil,   129,   119,   nil,    92,   nil,   119,   nil,   169,   170,
   171,   174,   175,   169,   177,   171,   nil,   179,   nil,   nil,
   180,   175,     2,   175,   183,   184,   nil,   177,   nil,    93,
    84,    67,   nil,   186,   nil,   nil,   187,   188,    39,   nil,
   189,   nil,   nil,   167,    93,   nil,   nil,   191,   nil,   192,
   nil,   nil,   nil,   nil,   nil,   nil,   193,   153,   nil,   nil,
   181,   nil,   nil,   nil,   nil,   nil,   196,   197,   198,   nil,
   nil,   190,   nil,   nil,   nil,   nil,   200,   194,   186,   nil,
   nil,   nil,   nil,    64,   196,   112,   nil,   nil,   nil,   nil,
   nil,   nil,   202,   nil,    99,   nil,   182,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   199,   198,   nil,
   199,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -142,    -2,    -3,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,  -142,
  -142,  -142,  -142,  -142,  -142,  -142,  -142,  -142,   -70,   -72,
   -73,  -142,  -142,   -79,  -142,  -142,   -89,   -91,   -94,   -95,
  -107,  -108,  -142,  -142,  -117,  -142,  -142,  -142,  -127,  -142,
  -132,  -142,  -142,    -4,  -142,  -142,   -28,  -142,   -32,   -37,
   -58,   -60,   -61,  -142,   -40,   -43,   -50,  -142,  -142,   -68,
  -142,   -72,   -73,  -142,   -71,  -142,   -74,   -75,  -142,   -77,
   -78,  -142,   -81,  -142,   -84,  -142,  -142,  -142,  -142,  -102,
   -90,   -92,   -93,   -96,  -112,  -113,  -115,  -142,  -110,  -111,
  -142,  -116,  -142,  -119,  -120,  -122,  -125,  -142,  -142,  -130,
  -133,  -128,  -134,  -135,  -138,   228,  -142,   -21,  -142,  -142,
  -142,  -142,  -142,  -142,  -142,  -142,   -34,   -35,   -38,   -59,
  -142,  -142,  -142,  -142,   -45,   -47,   -49,   -51,   -53,  -142,
  -142,  -142,   -63,  -142,   -66,   -67,  -142,  -142,  -103,  -105,
  -142,   -80,   -83,  -142,  -142,   -87,   -97,  -142,   -99,  -142,
  -101,  -109,  -114,  -118,  -121,  -123,  -142,  -129,  -131,  -136,
  -142,  -139,  -140,  -141,   -20,   -22,  -142,  -142,  -142,   -26,
   -27,  -142,   -30,   -33,   -36,   -31,  -142,  -142,  -142,   -44,
   -46,   -48,   -52,  -142,  -142,  -142,   -62,   -64,   -65,   -69,
  -124,  -104,  -142,   -76,  -142,   -86,  -142,   -98,  -100,  -126,
  -137,   -23,   -24,   -25,   -29,   -39,   -41,  -142,  -142,   -55,
  -142,   -57,  -106,   -85,   -88,   -42,   -54,   -56 ]

racc_goto_table = [
    83,   113,    65,    57,    63,   110,   138,   154,   117,    74,
   103,    84,   111,    73,     3,     1,    53,    96,   100,     2,
   116,    55,   183,    64,   131,   133,   136,   137,   141,   143,
    70,    78,    81,   107,    90,   148,    97,   102,   108,   112,
   171,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   155,   nil,   nil,   nil,   165,   nil,   nil,   nil,   152,
   nil,   nil,   169,   nil,   nil,   nil,   nil,   157,   110,   163,
   175,   167,   nil,   nil,   nil,   204,   nil,   192,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   189,   nil,   nil,   nil,   nil,   nil,   193,   155,
   210,   nil,   195,   nil,   110,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   224,   220 ]

racc_goto_check = [
    40,    52,    25,    20,    20,    56,    29,    42,    18,    35,
    50,    41,    54,    53,     3,     1,     3,    48,    48,     2,
    17,    19,    21,    23,    24,    26,    27,    28,    31,    32,
    33,    37,    38,    53,    43,    44,    47,    51,    55,    57,
    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,   nil,   nil,   nil,    52,   nil,   nil,   nil,    41,
   nil,   nil,    52,   nil,   nil,   nil,   nil,    35,    56,    50,
    18,    54,   nil,   nil,   nil,    42,   nil,    29,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,    25,    40,
    52,   nil,    20,   nil,    56,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    40,    25 ]

racc_goto_pointer = [
   nil,    15,    19,    14,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -34,   -46,     1,
   -18,  -103,   nil,     0,   -40,   -21,   -39,   -40,   -39,   -60,
   nil,   -39,   -39,     3,   nil,   -19,   nil,    -1,     0,   nil,
   -34,   -24,   -78,    -2,   -40,   nil,   nil,    -6,   -24,   nil,
   -33,    -6,   -50,   -14,   -37,   -10,   -43,   -12,   -74 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,
    10,    11,    13,    14,    15,    16,    17,   nil,   nil,   nil,
   nil,    58,   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    60,   nil,   nil,    26,    28,    87,    32,   nil,   nil,    34,
    35,   nil,   nil,    37,   nil,    40,    41,   nil,   nil,    43,
    44,   nil,   nil,    46,    48,   nil,    50,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 51, :_reduce_none,
  1, 51, :_reduce_none,
  1, 52, :_reduce_none,
  2, 52, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_13,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_19,
  4, 62, :_reduce_none,
  1, 67, :_reduce_none,
  2, 67, :_reduce_none,
  3, 68, :_reduce_23,
  3, 68, :_reduce_24,
  3, 68, :_reduce_25,
  2, 68, :_reduce_none,
  4, 66, :_reduce_27,
  1, 69, :_reduce_28,
  4, 69, :_reduce_29,
  4, 64, :_reduce_30,
  4, 65, :_reduce_31,
  1, 70, :_reduce_32,
  3, 70, :_reduce_33,
  1, 72, :_reduce_none,
  1, 72, :_reduce_none,
  2, 72, :_reduce_none,
  1, 71, :_reduce_37,
  2, 71, :_reduce_38,
  5, 63, :_reduce_39,
  0, 74, :_reduce_40,
  3, 74, :_reduce_41,
  4, 74, :_reduce_42,
  1, 73, :_reduce_43,
  3, 73, :_reduce_44,
  1, 76, :_reduce_none,
  2, 76, :_reduce_46,
  1, 76, :_reduce_none,
  2, 76, :_reduce_48,
  2, 75, :_reduce_49,
  0, 77, :_reduce_50,
  1, 77, :_reduce_51,
  2, 77, :_reduce_52,
  1, 77, :_reduce_53,
  4, 79, :_reduce_54,
  3, 79, :_reduce_55,
  4, 79, :_reduce_56,
  3, 78, :_reduce_57,
  1, 70, :_reduce_58,
  2, 70, :_reduce_59,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  4, 57, :_reduce_62,
  1, 81, :_reduce_63,
  2, 81, :_reduce_64,
  4, 58, :_reduce_65,
  1, 82, :_reduce_66,
  1, 82, :_reduce_67,
  2, 54, :_reduce_68,
  4, 54, :_reduce_69,
  1, 83, :_reduce_none,
  2, 83, :_reduce_71,
  1, 84, :_reduce_72,
  1, 84, :_reduce_73,
  2, 55, :_reduce_74,
  2, 56, :_reduce_75,
  4, 56, :_reduce_76,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  1, 86, :_reduce_79,
  3, 86, :_reduce_80,
  1, 88, :_reduce_none,
  1, 88, :_reduce_none,
  3, 59, :_reduce_83,
  2, 59, :_reduce_84,
  5, 59, :_reduce_85,
  4, 59, :_reduce_86,
  1, 92, :_reduce_87,
  3, 92, :_reduce_88,
  1, 89, :_reduce_89,
  2, 89, :_reduce_90,
  1, 89, :_reduce_none,
  1, 93, :_reduce_92,
  1, 93, :_reduce_93,
  1, 93, :_reduce_94,
  1, 93, :_reduce_95,
  2, 93, :_reduce_96,
  2, 91, :_reduce_97,
  3, 91, :_reduce_98,
  2, 91, :_reduce_99,
  3, 91, :_reduce_100,
  2, 91, :_reduce_101,
  1, 91, :_reduce_102,
  2, 85, :_reduce_103,
  3, 85, :_reduce_104,
  1, 94, :_reduce_105,
  3, 94, :_reduce_106,
  1, 90, :_reduce_none,
  1, 90, :_reduce_none,
  3, 96, :_reduce_109,
  1, 97, :_reduce_none,
  1, 97, :_reduce_none,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  3, 95, :_reduce_114,
  2, 95, :_reduce_115,
  2, 61, :_reduce_116,
  1, 99, :_reduce_117,
  3, 99, :_reduce_118,
  2, 99, :_reduce_119,
  1, 101, :_reduce_none,
  2, 101, :_reduce_none,
  2, 100, :_reduce_122,
  3, 100, :_reduce_123,
  4, 60, :_reduce_124,
  2, 60, :_reduce_125,
  4, 60, :_reduce_126,
  1, 103, :_reduce_127,
  2, 103, :_reduce_128,
  3, 103, :_reduce_129,
  1, 105, :_reduce_none,
  2, 105, :_reduce_none,
  1, 104, :_reduce_132,
  2, 104, :_reduce_133,
  2, 106, :_reduce_134,
  1, 107, :_reduce_135,
  2, 107, :_reduce_136,
  3, 107, :_reduce_137,
  1, 102, :_reduce_138,
  2, 102, :_reduce_139,
  1, 108, :_reduce_140,
  1, 108, :_reduce_141 ]

racc_reduce_n = 142

racc_shift_n = 228

racc_token_table = {
  false => 0,
  :error => 1,
  :BLANK => 2,
  :TEAMS => 3,
  :NEWLINE => 4,
  "---" => 5,
  :TEXT => 6,
  "--" => 7,
  "-" => 8,
  :PROP_REFEREE => 9,
  :PROP_END => 10,
  :PROP_NAME => 11,
  "(" => 12,
  ")" => 13,
  :PROP_YELLOWCARDS => 14,
  :PROP_REDCARDS => 15,
  "," => 16,
  ";" => 17,
  :MINUTE => 18,
  :PROP => 19,
  :COACH => 20,
  "[" => 21,
  "]" => 22,
  :YELLOW_CARD => 23,
  :RED_CARD => 24,
  :GROUP_DEF => 25,
  "|" => 26,
  :TEAM => 27,
  :ROUND_DEF => 28,
  :DATE => 29,
  :DURATION => 30,
  :DATETIME => 31,
  :GROUP => 32,
  "/" => 33,
  :ROUND => 34,
  :ORD => 35,
  :TIME => 36,
  :WDAY => 37,
  :STATUS => 38,
  :NOTE => 39,
  "@" => 40,
  :TIMEZONE => 41,
  :VS => 42,
  :SCORE => 43,
  :SCORE_MORE => 44,
  :PLAYER => 45,
  :PROP_GOALS => 46,
  :NONE => 47,
  :OG => 48,
  :PEN => 49 }

racc_nt_base = 50

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "BLANK",
  "TEAMS",
  "NEWLINE",
  "\"---\"",
  "TEXT",
  "\"--\"",
  "\"-\"",
  "PROP_REFEREE",
  "PROP_END",
  "PROP_NAME",
  "\"(\"",
  "\")\"",
  "PROP_YELLOWCARDS",
  "PROP_REDCARDS",
  "\",\"",
  "\";\"",
  "MINUTE",
  "PROP",
  "COACH",
  "\"[\"",
  "\"]\"",
  "YELLOW_CARD",
  "RED_CARD",
  "GROUP_DEF",
  "\"|\"",
  "TEAM",
  "ROUND_DEF",
  "DATE",
  "DURATION",
  "DATETIME",
  "GROUP",
  "\"/\"",
  "ROUND",
  "ORD",
  "TIME",
  "WDAY",
  "STATUS",
  "NOTE",
  "\"@\"",
  "TIMEZONE",
  "VS",
  "SCORE",
  "SCORE_MORE",
  "PLAYER",
  "PROP_GOALS",
  "NONE",
  "OG",
  "PEN",
  "$start",
  "document",
  "elements",
  "element",
  "date_header",
  "group_header",
  "round_header",
  "group_def",
  "round_def",
  "match_line",
  "goal_lines",
  "goal_lines_alt",
  "teams_list",
  "lineup_lines",
  "yellowcard_lines",
  "redcard_lines",
  "referee_line",
  "list",
  "list_item",
  "referee",
  "card_body",
  "player_w_minute",
  "card_sep",
  "lineup",
  "coach_opt",
  "lineup_name",
  "lineup_sep",
  "lineup_name_opts",
  "card",
  "lineup_sub",
  "card_type",
  "team_values",
  "round_date_opts",
  "date_header_body",
  "date_header_date",
  "geo_opts",
  "round_values",
  "group_sep",
  "round_sep",
  "match_opts",
  "match",
  "more_match_opts",
  "more_matches",
  "date_opts",
  "geo_values",
  "match_result",
  "match_fixture",
  "match_sep",
  "score",
  "goals_alt",
  "goal_alt",
  "goal_alt_sep",
  "minute",
  "goal_lines_body",
  "goals",
  "goal_sep",
  "goal",
  "minutes",
  "minute_opts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_13(val, _values, result)
     trace( "REDUCE BLANK" )
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     puts "!! skipping invalid content (trying to recover from parse error):"
                pp val[0] 
                @errors << "parser error (recover) - skipping #{val[0].pretty_inspect}"

    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_23(val, _values, result)
      puts "level 3"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_24(val, _values, result)
      puts "level 2 #{val[1]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_25(val, _values, result)
      puts "level 1 #{val[1]}"
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_27(val, _values, result)
                                   kwargs = val[1] 
                               @tree << RefereeLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_28(val, _values, result)
      result = { name: val[0]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_29(val, _values, result)
      result = { name: val[0], country: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_30(val, _values, result)
                                   @tree << CardsLine.new( type: 'Y', bookings: val[1] )                               

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_31(val, _values, result)
                                   @tree << CardsLine.new( type: 'R', bookings: val[1] )                    

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_32(val, _values, result)
       result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_33(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_37(val, _values, result)
     result = Booking.new( name: val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_38(val, _values, result)
     result = Booking.new( name: val[0], minute: val[1][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_39(val, _values, result)
                              kwargs = { team:    val[0],
                                     lineup:  val[1]  }.merge( val[2] ) 
                          @tree << LineupLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_40(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_41(val, _values, result)
      result = { coach: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_42(val, _values, result)
      result = { coach: val[3] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_43(val, _values, result)
     result = [[val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_44(val, _values, result)
                           ## if lineup_sep is -  start a new sub array!!
                       if val[1] == '-'
                          result << [val[2]]
                       else
                          result[-1] << val[2]
                       end

    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_46(val, _values, result)
     result = val[0]
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_48(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_49(val, _values, result)
                                  kwargs = { name: val[0] }.merge( val[1] )
                              result = Lineup.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_50(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_51(val, _values, result)
                                  result = { card: val[0] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_52(val, _values, result)
                                  result = { card: val[0], sub: val[1] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_53(val, _values, result)
                                  result = { sub: val[0] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_54(val, _values, result)
                                  result = Sub.new( sub:    val[1],
                                                minute: Minute.new(val[2][1]) 
                                              )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_55(val, _values, result)
                                  result = Sub.new( sub:    val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_56(val, _values, result)
                                  result = Sub.new( sub:    val[2],
                                                minute: Minute.new(val[1][1]) 
                                              )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_57(val, _values, result)
                                  kwargs = val[1]
                              result = Card.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 189)
  def _reduce_58(val, _values, result)
     result = { name: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 192)
  def _reduce_59(val, _values, result)
     result = { name: val[0],
                                        minute: Minute.new(val[1][1]) } 

    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.y', 206)
  def _reduce_62(val, _values, result)
                          @tree << GroupDef.new( name:  val[0],
                                             teams: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 212)
  def _reduce_63(val, _values, result)
                                                   result = val
                                               ## e.g. val is ["Austria"] 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 216)
  def _reduce_64(val, _values, result)
                                                   result.push( val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 225)
  def _reduce_65(val, _values, result)
                          kwargs = { name: val[0] }.merge( val[2] )
                      @tree<< RoundDef.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 230)
  def _reduce_66(val, _values, result)
     result = { date: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 231)
  def _reduce_67(val, _values, result)
     result = { duration: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 237)
  def _reduce_68(val, _values, result)
                         kwargs = {}.merge( val[0] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 242)
  def _reduce_69(val, _values, result)
                         kwargs = {}.merge( val[1] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.y', 248)
  def _reduce_71(val, _values, result)
      result = {}.merge( val[0], val[1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 251)
  def _reduce_72(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 252)
  def _reduce_73(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 259)
  def _reduce_74(val, _values, result)
                         @tree <<  GroupHeader.new( name: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 270)
  def _reduce_75(val, _values, result)
                         @tree <<  RoundHeader.new( names: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 274)
  def _reduce_76(val, _values, result)
                        @tree <<  RoundHeader.new( names: val[0], group: val[2] )  

    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.y', 279)
  def _reduce_79(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 280)
  def _reduce_80(val, _values, result)
       result.push( val[2] )
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.y', 290)
  def _reduce_83(val, _values, result)
                           kwargs = {}.merge( val[0], val[1], val[2] )
                       @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 295)
  def _reduce_84(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 303)
  def _reduce_85(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )
                     
                      ## add more match fixtures
                      val[3].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 313)
  def _reduce_86(val, _values, result)
                          kwargs = val[0]
                      @tree << MatchLine.new( **kwargs )
 
                      ## add more match fixtures
                      val[2].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 327)
  def _reduce_87(val, _values, result)
                                        trace( "REDUCE => more_matches : match" ) 
                                    result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 332)
  def _reduce_88(val, _values, result)
                                         trace( "REDUCE => more_matches : more_matches ',' match" ) 
                                     result.push( val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 338)
  def _reduce_89(val, _values, result)
       result = { ord: val[0][1][:value] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 339)
  def _reduce_90(val, _values, result)
       result = { ord: val[0][1][:value] }.merge( val[1] )
    result
  end
.,.,

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.y', 343)
  def _reduce_92(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 344)
  def _reduce_93(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 345)
  def _reduce_94(val, _values, result)
       result = { time: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 346)
  def _reduce_95(val, _values, result)
       result = { wday: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 347)
  def _reduce_96(val, _values, result)
       result = { wday: val[0][1], time: val[1][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 361)
  def _reduce_97(val, _values, result)
                          ## todo - add possible status_notes too!!! 
                      result = { status: val[0][1][:status] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 366)
  def _reduce_98(val, _values, result)
                         result = { status: val[0][1][:status] }.merge( val[1] ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 368)
  def _reduce_99(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 369)
  def _reduce_100(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 370)
  def _reduce_101(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 371)
  def _reduce_102(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 377)
  def _reduce_103(val, _values, result)
     result = { geo: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 378)
  def _reduce_104(val, _values, result)
     result = { geo: val[1], timezone: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 381)
  def _reduce_105(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 382)
  def _reduce_106(val, _values, result)
      result.push( val[2] )
    result
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.y', 390)
  def _reduce_109(val, _values, result)
                                   trace( "RECUDE match_fixture" )
                               result = { team1: val[0],
                                          team2: val[2] }   

    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.y', 404)
  def _reduce_114(val, _values, result)
                               trace( "REDUCE => match_result : TEAM score TEAM" )
                           result = { team1: val[0],
                                      team2: val[2],
                                      score: val[1][1]
                                    }   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 412)
  def _reduce_115(val, _values, result)
                              trace( "REDUCE  => match_result : match_fixture score" )
                          result = { score: val[1][1] }.merge( val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 437)
  def _reduce_116(val, _values, result)
                                 @tree << GoalLineAlt.new( goals: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 441)
  def _reduce_117(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 443)
  def _reduce_118(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 445)
  def _reduce_119(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.y', 453)
  def _reduce_122(val, _values, result)
                               result = GoalAlt.new( score:   val[0],
                                                 player:  val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 458)
  def _reduce_123(val, _values, result)
                               result = GoalAlt.new( score:  val[0],
                                                 player: val[1],
                                                 minute: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 470)
  def _reduce_124(val, _values, result)
                           kwargs = val[1]
                       @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 475)
  def _reduce_125(val, _values, result)
                             kwargs = val[0]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 480)
  def _reduce_126(val, _values, result)
                             kwargs = val[1]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 485)
  def _reduce_127(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: [] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 488)
  def _reduce_128(val, _values, result)
      result = { goals1: [],
                                                              goals2: val[1] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 491)
  def _reduce_129(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: val[2] }

    result
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.y', 507)
  def _reduce_132(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 508)
  def _reduce_133(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 524)
  def _reduce_134(val, _values, result)
                      result = Goal.new( player:  val[0],
                                     minutes: val[1] )   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 536)
  def _reduce_135(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 537)
  def _reduce_136(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 538)
  def _reduce_137(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 544)
  def _reduce_138(val, _values, result)
                            kwargs = {}.merge( val[0][1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 549)
  def _reduce_139(val, _values, result)
                            kwargs = { }.merge( val[0][1] ).merge( val[1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 553)
  def _reduce_140(val, _values, result)
      result = { og: true }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 554)
  def _reduce_141(val, _values, result)
      result = { pen: true }
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RaccMatchParser
