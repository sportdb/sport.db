#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.y".
#

require 'racc/parser.rb'
class RaccMatchParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    21,    13,    22,   176,   121,   215,   106,   174,    23,    70,
    67,    24,    58,   231,    66,   101,    25,   110,    51,    26,
    27,   252,    28,    72,    73,   214,    32,   232,   106,    97,
    29,   228,    48,    30,    34,   232,    35,    36,    37,   107,
    39,    42,    44,    45,    57,   177,   178,    21,    13,    22,
   101,    86,    57,    53,    55,    23,    98,   100,    24,    86,
   111,   107,   227,    25,   171,    51,    26,    27,    89,    28,
    60,   147,    94,    32,   222,   258,   146,    29,   220,    48,
    30,    34,    92,    35,    36,    37,   250,    39,    42,    44,
    45,    98,   100,    82,    86,    83,    57,    61,    55,    57,
    53,    55,    70,   223,    91,   113,   103,    70,   104,   162,
   163,    57,    63,    55,    44,    45,    72,    73,   155,   116,
    51,    72,    73,   152,   138,   144,   141,   147,   154,   247,
   191,   140,   146,   150,   126,   147,   249,    77,   195,    78,
   146,   130,   133,   131,   132,    67,   193,   194,    79,    66,
   130,   133,   131,   132,    80,    86,  -109,  -110,    87,    88,
    48,   105,   117,   118,    57,   126,   127,   134,   136,   137,
   142,   143,   148,   149,   158,   160,   164,   165,   167,   168,
   -99,   169,    48,   179,   180,   182,   183,    51,   185,   126,
   187,    57,   189,    57,   197,   198,   199,   200,   201,   202,
   203,   204,   206,   207,   208,   209,    70,   211,   212,   213,
    77,   217,   218,   220,   224,   225,   226,   229,    48,   233,
   234,   235,   180,   237,    57,   126,   239,   240,   241,   242,
   243,   244,   245,   246,   251,    48,   254,   158,   256,    77,
   259,   220,   261 ]

racc_action_check = [
     0,     0,     0,    99,    54,   152,    47,    98,     0,    26,
    25,     0,     1,   172,    25,    41,     0,    48,     0,     0,
     0,   230,     0,    26,    26,   152,     0,   172,    48,    41,
     0,   166,     0,     0,     0,   230,     0,     0,     0,    47,
     0,     0,     0,     0,    54,    99,    99,     2,     2,     2,
    95,    98,     0,     0,     0,     2,    41,    41,     2,    41,
    48,    48,   166,     2,    95,     2,     2,     2,    38,     2,
    22,   221,    38,     2,   159,   255,   221,     2,   255,     2,
     2,     2,    38,     2,     2,     2,   221,     2,     2,     2,
     2,    95,    95,    32,    95,    32,    53,    23,    53,     2,
     2,     2,    27,   159,    38,    49,    42,   158,    42,    79,
    79,    32,    24,    32,    42,    42,    27,    27,    75,    49,
    49,   158,   158,    75,    64,    68,    64,    68,    75,   220,
   124,    64,    68,    74,   124,    74,   220,    28,   128,    29,
    74,   128,   128,   128,   128,   139,   126,   126,    30,   139,
    60,    60,    60,    60,    31,    33,    34,    35,    36,    37,
    40,    45,    51,    52,    55,    57,    58,    61,    62,    63,
    66,    67,    70,    71,    77,    78,    81,    84,    86,    90,
    92,    93,    97,   100,   108,   109,   112,   114,   116,   117,
   119,   120,   121,   123,   130,   131,   132,   133,   134,   135,
   136,   138,   140,   141,   142,   144,   145,   147,   150,   151,
   153,   154,   155,   156,   161,   164,   165,   168,   171,   175,
   177,   178,   183,   187,   188,   191,   197,   198,   199,   202,
   203,   213,   214,   215,   228,   232,   246,   247,   248,   249,
   257,   258,   260 ]

racc_action_pointer = [
    -1,    12,    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    66,    87,    97,    -5,    -6,    87,   122,   107,
   116,   150,    58,   107,   123,   124,   154,   155,    64,   nil,
   127,    11,    71,   nil,   nil,   118,   nil,   -13,     9,   101,
   nil,   109,   159,    43,    -9,   111,   nil,   143,   166,   nil,
   145,   156,   155,   153,   113,   nil,   155,   155,   114,   nil,
   150,   151,   nil,   nil,   122,   110,   nil,   147,   142,    74,
   nil,   148,   nil,   nil,   149,   nil,   128,   nil,   nil,   nil,
   141,   nil,   139,   140,   nil,    46,   nil,   149,     3,    -1,
   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   137,   152,
   nil,   nil,   153,   nil,   168,   nil,   184,   167,   nil,   179,
   138,   188,   nil,   140,   112,   nil,    90,   nil,   136,   nil,
   188,   189,   190,   193,   194,   188,   186,   nil,   197,   130,
   198,   199,   188,   nil,   201,   191,   nil,   203,   nil,   nil,
   204,   198,     1,   195,   207,   208,   188,   nil,    92,    70,
   nil,   210,   nil,   nil,   211,   212,    13,   nil,   213,   nil,
   nil,   185,     9,   nil,   nil,   215,   nil,   216,   217,   nil,
   nil,   nil,   nil,   175,   nil,   nil,   nil,   219,   171,   nil,
   nil,   203,   nil,   nil,   nil,   nil,   nil,   222,   223,   224,
   nil,   nil,   225,   220,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   227,   217,   209,   nil,   nil,   nil,   nil,
   114,    58,   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,
    17,   nil,   202,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   221,   210,   212,   224,
   nil,   nil,   nil,   nil,   nil,    53,   nil,   214,   216,   nil,
   216,   nil ]

racc_action_default = [
    -1,  -162,    -2,    -3,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,
   -21,   -22,  -162,  -162,  -162,  -162,  -162,  -162,  -162,  -162,
  -162,  -162,  -162,   -86,   -88,   -89,  -162,  -162,  -162,   -96,
  -162,  -162,  -106,  -108,  -111,  -112,  -125,  -126,  -162,  -162,
  -137,  -162,  -162,  -162,  -147,  -162,  -152,  -162,  -162,    -4,
  -162,  -162,   -32,   -34,  -162,   -37,  -162,   -45,  -162,   -49,
   -54,   -74,   -76,   -77,  -162,   -57,   -60,   -67,  -162,  -162,
   -84,  -162,   -88,   -89,  -162,   -87,  -162,   -90,   -91,   -92,
  -162,   -94,   -95,  -162,   -98,  -162,  -101,  -162,  -162,  -162,
  -162,  -120,  -107,  -109,  -110,  -113,  -130,  -131,  -132,  -162,
  -128,  -129,  -162,  -136,  -162,  -139,  -140,  -142,  -145,  -162,
  -162,  -150,  -153,  -148,  -154,  -155,  -158,   262,  -162,   -24,
  -162,  -162,  -162,  -162,  -162,  -162,  -162,   -35,  -162,  -162,
   -39,   -41,   -43,   -46,  -162,  -162,   -51,   -52,   -55,   -75,
  -162,  -162,  -162,  -162,   -62,   -64,   -69,   -68,  -162,  -162,
   -79,  -162,   -82,   -83,  -162,  -162,  -121,  -123,  -162,   -97,
  -100,  -162,  -162,  -104,  -114,  -162,  -116,  -162,  -162,  -119,
  -133,  -135,  -127,  -132,  -138,  -141,  -143,  -162,  -149,  -151,
  -156,  -162,  -159,  -160,  -161,   -23,   -25,  -162,  -162,  -162,
   -29,   -30,  -162,  -162,   -36,   -38,   -40,   -42,   -44,   -47,
   -50,   -53,   -48,  -162,  -162,  -162,   -61,   -63,   -65,   -66,
  -162,  -162,   -78,   -80,   -81,   -85,  -144,  -122,  -162,   -93,
  -162,  -103,  -162,  -115,  -117,  -118,  -134,  -146,  -157,   -26,
   -27,   -28,   -31,   -33,   -56,   -58,  -162,   -67,  -162,  -162,
   -73,  -124,  -102,  -105,   -59,   -69,   -71,  -162,   -69,   -72,
  -162,   -70 ]

racc_goto_table = [
    76,    95,   156,   125,   122,    65,   181,    68,    74,   172,
   129,    85,   115,    96,   123,    84,     3,     1,    59,   108,
   112,     2,   128,    62,   135,    64,   139,   210,    75,   151,
   153,   260,   159,   161,    81,    90,   119,    93,   102,   166,
   109,   114,   120,   124,   192,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   173,   nil,
   nil,   nil,   nil,   186,   nil,   nil,   nil,   170,   nil,   nil,
   190,   nil,   nil,   122,   nil,   nil,   175,   184,   196,   188,
   nil,   236,   nil,   230,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   205,
   nil,   nil,   nil,   nil,   nil,   216,   nil,   nil,   nil,   nil,
   nil,   nil,   173,   nil,   nil,   nil,   nil,   238,   122,   221,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   255,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   248,   253,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   257 ]

racc_goto_check = [
    32,    47,    34,    60,    64,    25,    56,    27,    27,    49,
    21,    42,    58,    48,    62,    61,     3,     1,     3,    55,
    55,     2,    20,    22,    23,    24,    26,    28,    30,    31,
    33,    35,    38,    39,    40,    44,    61,    45,    50,    51,
    54,    59,    63,    65,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,
   nil,   nil,   nil,    60,   nil,   nil,   nil,    48,   nil,   nil,
    60,   nil,   nil,    64,   nil,   nil,    42,    58,    21,    62,
   nil,    56,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,    47,   nil,   nil,   nil,   nil,    60,    64,    27,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    32,    47,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    32 ]

racc_goto_pointer = [
   nil,    17,    21,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -38,   -50,    -1,   -38,     0,   -20,   -38,   -19,  -118,   nil,
     0,   -46,   -28,   -45,   -75,  -227,   nil,   nil,   -46,   -46,
     2,   nil,   -22,   nil,    -3,    -1,   nil,   -39,   -28,   -88,
    -4,   -47,   nil,   nil,    -8,   -28,  -102,   nil,   -37,    -8,
   -54,   -17,   -41,   -12,   -50,   -14,   -82 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    14,    15,    16,    17,    18,    19,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    69,   145,
   nil,   nil,   nil,   nil,   nil,   219,   157,    71,   nil,   nil,
    31,    33,    99,    38,   nil,   nil,    40,    41,   nil,   nil,
    43,   nil,    46,    47,   nil,   nil,   nil,    49,    50,   nil,
   nil,    52,    54,   nil,    56,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 60, :_reduce_none,
  2, 60, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_14,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_22,
  4, 71, :_reduce_none,
  1, 78, :_reduce_none,
  2, 78, :_reduce_none,
  3, 79, :_reduce_26,
  3, 79, :_reduce_27,
  3, 79, :_reduce_28,
  2, 79, :_reduce_none,
  4, 77, :_reduce_30,
  5, 76, :_reduce_31,
  0, 81, :_reduce_none,
  3, 81, :_reduce_33,
  1, 80, :_reduce_34,
  2, 80, :_reduce_35,
  4, 75, :_reduce_36,
  1, 82, :_reduce_37,
  3, 82, :_reduce_38,
  1, 84, :_reduce_none,
  2, 84, :_reduce_none,
  1, 84, :_reduce_none,
  2, 84, :_reduce_none,
  2, 83, :_reduce_43,
  3, 83, :_reduce_44,
  1, 83, :_reduce_45,
  2, 83, :_reduce_46,
  4, 73, :_reduce_47,
  4, 74, :_reduce_48,
  1, 85, :_reduce_49,
  3, 85, :_reduce_50,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  2, 87, :_reduce_none,
  1, 86, :_reduce_54,
  2, 86, :_reduce_55,
  5, 72, :_reduce_56,
  0, 89, :_reduce_57,
  3, 89, :_reduce_58,
  4, 89, :_reduce_59,
  1, 88, :_reduce_60,
  3, 88, :_reduce_61,
  1, 91, :_reduce_none,
  2, 91, :_reduce_63,
  1, 91, :_reduce_none,
  2, 91, :_reduce_65,
  3, 90, :_reduce_66,
  0, 92, :_reduce_67,
  1, 92, :_reduce_68,
  0, 93, :_reduce_69,
  6, 93, :_reduce_70,
  3, 93, :_reduce_71,
  4, 93, :_reduce_72,
  3, 94, :_reduce_73,
  1, 85, :_reduce_74,
  2, 85, :_reduce_75,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  4, 66, :_reduce_78,
  1, 96, :_reduce_79,
  2, 96, :_reduce_80,
  4, 67, :_reduce_81,
  1, 97, :_reduce_82,
  1, 97, :_reduce_83,
  2, 62, :_reduce_84,
  4, 62, :_reduce_85,
  1, 98, :_reduce_none,
  2, 98, :_reduce_87,
  1, 99, :_reduce_88,
  1, 99, :_reduce_89,
  2, 63, :_reduce_90,
  2, 65, :_reduce_91,
  2, 64, :_reduce_92,
  4, 64, :_reduce_93,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  1, 101, :_reduce_96,
  3, 101, :_reduce_97,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 68, :_reduce_100,
  2, 68, :_reduce_101,
  5, 68, :_reduce_102,
  4, 68, :_reduce_103,
  1, 107, :_reduce_104,
  3, 107, :_reduce_105,
  1, 104, :_reduce_106,
  2, 104, :_reduce_107,
  1, 104, :_reduce_none,
  1, 108, :_reduce_109,
  1, 108, :_reduce_110,
  1, 108, :_reduce_111,
  1, 108, :_reduce_112,
  2, 108, :_reduce_113,
  2, 106, :_reduce_114,
  3, 106, :_reduce_115,
  2, 106, :_reduce_116,
  3, 106, :_reduce_117,
  3, 106, :_reduce_118,
  2, 106, :_reduce_119,
  1, 106, :_reduce_120,
  2, 100, :_reduce_121,
  3, 100, :_reduce_122,
  1, 109, :_reduce_123,
  3, 109, :_reduce_124,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 111, :_reduce_127,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  0, 114, :_reduce_132,
  1, 114, :_reduce_133,
  4, 110, :_reduce_134,
  3, 110, :_reduce_135,
  2, 70, :_reduce_136,
  1, 115, :_reduce_137,
  3, 115, :_reduce_138,
  2, 115, :_reduce_139,
  1, 117, :_reduce_none,
  2, 117, :_reduce_none,
  2, 116, :_reduce_142,
  3, 116, :_reduce_143,
  4, 69, :_reduce_144,
  2, 69, :_reduce_145,
  4, 69, :_reduce_146,
  1, 119, :_reduce_147,
  2, 119, :_reduce_148,
  3, 119, :_reduce_149,
  1, 121, :_reduce_none,
  2, 121, :_reduce_none,
  1, 120, :_reduce_152,
  2, 120, :_reduce_153,
  2, 122, :_reduce_154,
  1, 123, :_reduce_155,
  2, 123, :_reduce_156,
  3, 123, :_reduce_157,
  1, 118, :_reduce_158,
  2, 118, :_reduce_159,
  1, 124, :_reduce_160,
  1, 124, :_reduce_161 ]

racc_reduce_n = 162

racc_shift_n = 262

racc_token_table = {
  false => 0,
  :error => 1,
  :BLANK => 2,
  :TEAMS => 3,
  :NEWLINE => 4,
  "---" => 5,
  :TEXT => 6,
  "--" => 7,
  "-" => 8,
  :PROP_ATTENDANCE => 9,
  :PROP_NUM => 10,
  :PROP_END => 11,
  :PROP_REFEREE => 12,
  ";" => 13,
  :ATTENDANCE => 14,
  :PROP_NAME => 15,
  :ENCLOSED_NAME => 16,
  :PROP_PENALTIES => 17,
  "," => 18,
  :SCORE => 19,
  :PROP_YELLOWCARDS => 20,
  :PROP_REDCARDS => 21,
  :MINUTE => 22,
  :PROP => 23,
  :COACH => 24,
  "(" => 25,
  ")" => 26,
  "[" => 27,
  "]" => 28,
  :YELLOW_CARD => 29,
  :RED_CARD => 30,
  :GROUP_DEF => 31,
  "|" => 32,
  :TEAM => 33,
  :ROUND_DEF => 34,
  :DATE => 35,
  :DURATION => 36,
  :DATETIME => 37,
  :GROUP => 38,
  :ROUND_OUTLINE => 39,
  "/" => 40,
  :ROUND => 41,
  :ORD => 42,
  :TIME => 43,
  :WDAY => 44,
  :STATUS => 45,
  :NOTE => 46,
  :SCORE_NOTE => 47,
  "@" => 48,
  :TIMEZONE => 49,
  :GEO => 50,
  :VS => 51,
  :SCORE_MORE => 52,
  :PLAYER => 53,
  :PROP_GOALS => 54,
  :NONE => 55,
  :OG => 56,
  :PEN => 57 }

racc_nt_base = 58

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "BLANK",
  "TEAMS",
  "NEWLINE",
  "\"---\"",
  "TEXT",
  "\"--\"",
  "\"-\"",
  "PROP_ATTENDANCE",
  "PROP_NUM",
  "PROP_END",
  "PROP_REFEREE",
  "\";\"",
  "ATTENDANCE",
  "PROP_NAME",
  "ENCLOSED_NAME",
  "PROP_PENALTIES",
  "\",\"",
  "SCORE",
  "PROP_YELLOWCARDS",
  "PROP_REDCARDS",
  "MINUTE",
  "PROP",
  "COACH",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "YELLOW_CARD",
  "RED_CARD",
  "GROUP_DEF",
  "\"|\"",
  "TEAM",
  "ROUND_DEF",
  "DATE",
  "DURATION",
  "DATETIME",
  "GROUP",
  "ROUND_OUTLINE",
  "\"/\"",
  "ROUND",
  "ORD",
  "TIME",
  "WDAY",
  "STATUS",
  "NOTE",
  "SCORE_NOTE",
  "\"@\"",
  "TIMEZONE",
  "GEO",
  "VS",
  "SCORE_MORE",
  "PLAYER",
  "PROP_GOALS",
  "NONE",
  "OG",
  "PEN",
  "$start",
  "document",
  "elements",
  "element",
  "date_header",
  "group_header",
  "round_header",
  "round_outline",
  "group_def",
  "round_def",
  "match_line",
  "goal_lines",
  "goal_lines_alt",
  "teams_list",
  "lineup_lines",
  "yellowcard_lines",
  "redcard_lines",
  "penalties_lines",
  "referee_line",
  "attendance_line",
  "list",
  "list_item",
  "referee",
  "attendance_opt",
  "penalties_body",
  "penalty",
  "penalty_sep",
  "card_body",
  "player_w_minute",
  "card_sep",
  "lineup",
  "coach_opt",
  "lineup_name",
  "lineup_sep",
  "lineup_card_opts",
  "lineup_sub_opts",
  "card",
  "card_type",
  "team_values",
  "round_date_opts",
  "date_header_body",
  "date_header_date",
  "geo_opts",
  "round_values",
  "group_sep",
  "round_sep",
  "match_opts",
  "match",
  "more_match_opts",
  "more_matches",
  "date_opts",
  "geo_values",
  "match_result",
  "match_fixture",
  "match_sep",
  "score",
  "score_note_opt",
  "goals_alt",
  "goal_alt",
  "goal_alt_sep",
  "minute",
  "goal_lines_body",
  "goals",
  "goal_sep",
  "goal",
  "minutes",
  "minute_opts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_14(val, _values, result)
     trace( "REDUCE BLANK" )
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_22(val, _values, result)
     puts "!! skipping invalid content (trying to recover from parse error):"
                pp val[0]
                ##  note - do NOT report recover errors for now 
                ##  @errors << "parser error (recover) - skipping #{val[0].pretty_inspect}"

    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_26(val, _values, result)
      puts "level 3"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_27(val, _values, result)
      puts "level 2 #{val[1]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_28(val, _values, result)
      puts "level 1 #{val[1]}"
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_30(val, _values, result)
                                     @tree << AttendanceLine.new( att: val[1][1][:value] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_31(val, _values, result)
                                   kwargs = val[1] 
                               @tree << RefereeLine.new( **kwargs ) 

    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_33(val, _values, result)
                                     @tree << AttendanceLine.new( att: val[2][1][:value] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_34(val, _values, result)
      result = { name: val[0]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_35(val, _values, result)
      result = { name: val[0], country: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_36(val, _values, result)
                                   @tree << PenaltiesLine.new( penalties: val[1] )                                                            

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_37(val, _values, result)
      result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_38(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_43(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_44(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1],
                                                       note: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_45(val, _values, result)
                                     result = Penalty.new( name: val[0] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_46(val, _values, result)
                                     result = Penalty.new( name: val[0],
                                                       note: val[1] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_47(val, _values, result)
                                   @tree << CardsLine.new( type: 'Y', bookings: val[1] )                               

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_48(val, _values, result)
                                   @tree << CardsLine.new( type: 'R', bookings: val[1] )                    

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_49(val, _values, result)
       result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_50(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_54(val, _values, result)
     result = Booking.new( name: val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_55(val, _values, result)
     result = Booking.new( name: val[0], minute: val[1][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 162)
  def _reduce_56(val, _values, result)
                              kwargs = { team:    val[0],
                                     lineup:  val[1]  }.merge( val[2] ) 
                          @tree << LineupLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_57(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_58(val, _values, result)
      result = { coach: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_59(val, _values, result)
      result = { coach: val[3] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_60(val, _values, result)
     result = [[val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 178)
  def _reduce_61(val, _values, result)
                           ## if lineup_sep is -  start a new sub array!!
                       if val[1] == '-'
                          result << [val[2]]
                       else
                          result[-1] << val[2]
                       end

    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.y', 188)
  def _reduce_63(val, _values, result)
     result = val[0]
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.y', 190)
  def _reduce_65(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 195)
  def _reduce_66(val, _values, result)
                                  kwargs = { name: val[0] }.merge( val[1] ).merge( val[2] )
                              result = Lineup.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 199)
  def _reduce_67(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 200)
  def _reduce_68(val, _values, result)
     result = { card: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 217)
  def _reduce_69(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 220)
  def _reduce_70(val, _values, result)
                                  kwargs = { name: val[1] }.merge( val[2] ).merge( val[4] )
                              sub    = Sub.new( sub:    Lineup.new( **kwargs ),
                                                minute: Minute.new(val[3][1]) 
                                              )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 228)
  def _reduce_71(val, _values, result)
                                  sub = Sub.new( sub: val[1] )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 234)
  def _reduce_72(val, _values, result)
                                  sub = Sub.new( sub:    val[2],
                                             minute: Minute.new(val[1][1]) 
                                            )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 244)
  def _reduce_73(val, _values, result)
                                  kwargs = val[1]
                              result = Card.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 249)
  def _reduce_74(val, _values, result)
     result = { name: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 252)
  def _reduce_75(val, _values, result)
     result = { name: val[0],
                                        minute: Minute.new(val[1][1]) } 

    result
  end
.,.,

# reduce 76 omitted

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.y', 266)
  def _reduce_78(val, _values, result)
                          @tree << GroupDef.new( name:  val[0],
                                             teams: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 272)
  def _reduce_79(val, _values, result)
                                                   result = val
                                               ## e.g. val is ["Austria"] 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 276)
  def _reduce_80(val, _values, result)
                                                   result.push( val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 285)
  def _reduce_81(val, _values, result)
                          kwargs = { name: val[0] }.merge( val[2] )
                      @tree<< RoundDef.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 290)
  def _reduce_82(val, _values, result)
     result = { date: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 291)
  def _reduce_83(val, _values, result)
     result = { duration: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 297)
  def _reduce_84(val, _values, result)
                         kwargs = {}.merge( val[0] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 302)
  def _reduce_85(val, _values, result)
                         kwargs = {}.merge( val[1] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.y', 308)
  def _reduce_87(val, _values, result)
      result = {}.merge( val[0], val[1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 311)
  def _reduce_88(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 312)
  def _reduce_89(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 319)
  def _reduce_90(val, _values, result)
                         @tree <<  GroupHeader.new( name: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 329)
  def _reduce_91(val, _values, result)
                                      @tree << RoundOutline.new( outline: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 338)
  def _reduce_92(val, _values, result)
                         @tree <<  RoundHeader.new( names: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 342)
  def _reduce_93(val, _values, result)
                        @tree <<  RoundHeader.new( names: val[0], group: val[2] )  

    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

module_eval(<<'.,.,', 'parser.y', 347)
  def _reduce_96(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 348)
  def _reduce_97(val, _values, result)
       result.push( val[2] )
    result
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.y', 358)
  def _reduce_100(val, _values, result)
                           kwargs = {}.merge( val[0], val[1], val[2] )
                       @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 363)
  def _reduce_101(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 371)
  def _reduce_102(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )
                     
                      ## add more match fixtures
                      val[3].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 381)
  def _reduce_103(val, _values, result)
                          kwargs = val[0]
                      @tree << MatchLine.new( **kwargs )
 
                      ## add more match fixtures
                      val[2].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 395)
  def _reduce_104(val, _values, result)
                                        trace( "REDUCE => more_matches : match" ) 
                                    result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 400)
  def _reduce_105(val, _values, result)
                                         trace( "REDUCE => more_matches : more_matches ',' match" ) 
                                     result.push( val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 406)
  def _reduce_106(val, _values, result)
       result = { ord: val[0][1][:value] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 407)
  def _reduce_107(val, _values, result)
       result = { ord: val[0][1][:value] }.merge( val[1] )
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.y', 411)
  def _reduce_109(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 412)
  def _reduce_110(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 413)
  def _reduce_111(val, _values, result)
       result = { time: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 414)
  def _reduce_112(val, _values, result)
       result = { wday: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 415)
  def _reduce_113(val, _values, result)
       result = { wday: val[0][1], time: val[1][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 429)
  def _reduce_114(val, _values, result)
                          ## todo - add possible status_notes too!!! 
                      result = { status: val[0][1][:status] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 434)
  def _reduce_115(val, _values, result)
                         result = { status: val[0][1][:status] }.merge( val[1] ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 436)
  def _reduce_116(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 437)
  def _reduce_117(val, _values, result)
     result = { note: val[1] }.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 440)
  def _reduce_118(val, _values, result)
                        result = { score_note: val[1] }.merge( val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 442)
  def _reduce_119(val, _values, result)
     result = { note: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 445)
  def _reduce_120(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 451)
  def _reduce_121(val, _values, result)
     result = { geo: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 452)
  def _reduce_122(val, _values, result)
     result = { geo: val[1], timezone: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 455)
  def _reduce_123(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 456)
  def _reduce_124(val, _values, result)
      result.push( val[2] )
    result
  end
.,.,

# reduce 125 omitted

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.y', 464)
  def _reduce_127(val, _values, result)
                                   trace( "RECUDE match_fixture" )
                               result = { team1: val[0],
                                          team2: val[2] }   

    result
  end
.,.,

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.y', 476)
  def _reduce_132(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 477)
  def _reduce_133(val, _values, result)
     result = { score_note: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 482)
  def _reduce_134(val, _values, result)
                               trace( "REDUCE => match_result : TEAM score TEAM" )
                           result = { team1: val[0],
                                      team2: val[2],
                                      score: val[1][1]
                                    }.merge( val[3] )   
                           ## pp result

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 491)
  def _reduce_135(val, _values, result)
                              trace( "REDUCE  => match_result : match_fixture score" )
                          result = { score: val[1][1] }.merge( val[0] ).merge( val[2] )  
                          ## pp result

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 517)
  def _reduce_136(val, _values, result)
                                 @tree << GoalLineAlt.new( goals: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 521)
  def _reduce_137(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 523)
  def _reduce_138(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 525)
  def _reduce_139(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'parser.y', 533)
  def _reduce_142(val, _values, result)
                               result = GoalAlt.new( score:   val[0],
                                                 player:  val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 538)
  def _reduce_143(val, _values, result)
                               result = GoalAlt.new( score:  val[0],
                                                 player: val[1],
                                                 minute: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 550)
  def _reduce_144(val, _values, result)
                           kwargs = val[1]
                       @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 555)
  def _reduce_145(val, _values, result)
                             kwargs = val[0]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 560)
  def _reduce_146(val, _values, result)
                             kwargs = val[1]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 565)
  def _reduce_147(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: [] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 568)
  def _reduce_148(val, _values, result)
      result = { goals1: [],
                                                              goals2: val[1] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 571)
  def _reduce_149(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: val[2] }

    result
  end
.,.,

# reduce 150 omitted

# reduce 151 omitted

module_eval(<<'.,.,', 'parser.y', 587)
  def _reduce_152(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 588)
  def _reduce_153(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 604)
  def _reduce_154(val, _values, result)
                      result = Goal.new( player:  val[0],
                                     minutes: val[1] )   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 616)
  def _reduce_155(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 617)
  def _reduce_156(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 618)
  def _reduce_157(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 624)
  def _reduce_158(val, _values, result)
                            kwargs = {}.merge( val[0][1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 629)
  def _reduce_159(val, _values, result)
                            kwargs = { }.merge( val[0][1] ).merge( val[1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 633)
  def _reduce_160(val, _values, result)
      result = { og: true }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 634)
  def _reduce_161(val, _values, result)
      result = { pen: true }
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RaccMatchParser
