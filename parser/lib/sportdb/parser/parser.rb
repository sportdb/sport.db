#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.y".
#

require 'racc/parser.rb'
class RaccMatchParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    15,    12,    16,    45,    85,   127,   160,    42,    17,    47,
    75,   110,    76,    73,   111,    21,    82,    32,    33,    18,
    69,    36,    19,    23,   161,    24,    25,   129,    27,    30,
    32,    33,    50,    15,    12,    16,    59,    39,    39,    44,
    42,    17,    70,    72,    59,    83,    78,    79,    21,    42,
   166,    51,    18,    73,    36,    19,    23,   130,    24,    25,
   124,    27,    30,    32,    33,    55,    50,    56,   155,    61,
    39,   169,    44,    66,   139,   165,    64,    95,   170,   182,
    52,    44,    70,    72,    59,   143,   170,    53,    99,   102,
   100,   101,    59,    63,    99,   102,   100,   101,   106,   -73,
   103,   105,    78,    79,    44,    90,   115,   116,   141,   142,
   158,   159,   -74,    60,    36,    77,    87,    88,    92,    95,
    96,   113,   117,   118,   120,   121,   -63,   122,    36,   131,
   132,   133,    95,    44,   136,    44,   145,   146,   147,   148,
   149,    50,   151,   152,   110,   162,   163,   164,   167,    36,
   171,   172,    44,    44,    95,   174,   175,   176,   177,    50,
   179,   180,   181,    36,   184,   185 ]

racc_action_check = [
     0,     0,     0,     1,    37,    70,   112,     0,     0,    16,
    30,    50,    30,    29,    50,     0,    36,    30,    30,     0,
    29,     0,     0,     0,   112,     0,     0,    71,     0,     0,
     0,     0,    17,     2,     2,     2,    70,     0,    37,     0,
     2,     2,    29,    29,    29,    36,    36,    36,     2,    21,
   119,    18,     2,    67,     2,     2,     2,    71,     2,     2,
    67,     2,     2,     2,     2,    21,   110,    21,   110,    26,
     2,   125,     2,    26,    93,   119,    26,    93,   125,   168,
    19,    21,    67,    67,    67,    97,   168,    20,    97,    97,
    97,    97,    22,    26,    47,    47,    47,    47,    48,    23,
    48,    48,    35,    35,    41,    41,    52,    52,    95,    95,
   111,   111,    24,    25,    28,    33,    39,    40,    42,    44,
    45,    51,    54,    57,    59,    62,    64,    65,    69,    72,
    81,    84,    87,    89,    90,    92,    99,   100,   101,   102,
   103,   104,   105,   106,   108,   114,   117,   118,   121,   124,
   128,   130,   135,   137,   139,   145,   146,   147,   154,   155,
   156,   157,   166,   170,   177,   178 ]

racc_action_pointer = [
    -1,     3,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,    20,    30,    59,
    83,    41,    57,    77,    90,   109,    65,   nil,    92,     9,
   -14,   nil,   nil,    84,   nil,    64,     8,     0,   nil,    76,
   113,    64,    77,   nil,   105,   120,   nil,    89,    90,   nil,
    -2,    99,    82,   nil,   105,   nil,   nil,   106,   nil,   118,
   nil,   nil,    98,   nil,    97,    98,   nil,    49,   nil,   106,
     1,    23,   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   108,   nil,   nil,   109,   nil,   nil,   118,   nil,    93,
   130,   nil,    95,    63,   nil,    66,   nil,    83,   nil,   130,
   131,   132,   135,   136,   129,   138,   139,   nil,   131,   nil,
    54,    92,     2,   nil,   141,   nil,   nil,   142,   143,    39,
   nil,   144,   nil,   nil,   127,    67,   nil,   nil,   146,   nil,
   147,   nil,   nil,   nil,   nil,   112,   nil,   113,   nil,   140,
   nil,   nil,   nil,   nil,   nil,   151,   152,   153,   nil,   nil,
   nil,   nil,   nil,   nil,   144,   147,   143,   147,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   156,   nil,    75,   nil,
   141,   nil,   nil,   nil,   nil,   nil,   nil,   149,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,  -118,    -2,    -3,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,  -118,  -118,  -118,  -118,
  -118,  -118,   -51,   -53,   -54,  -118,  -118,   -60,  -118,  -118,
   -70,   -72,   -75,   -76,   -88,   -89,  -118,  -118,   -98,  -118,
  -118,  -103,  -118,  -108,  -118,  -118,    -4,  -118,  -118,   -25,
   -32,  -118,  -118,   -49,  -118,   -53,   -54,  -118,   -52,  -118,
   -55,   -56,  -118,   -58,   -59,  -118,   -62,  -118,   -65,  -118,
  -118,  -118,  -118,   -83,   -71,   -73,   -74,   -77,   -93,   -94,
   -96,  -118,   -91,   -92,  -118,   -97,   -99,  -118,  -102,  -118,
  -106,  -109,  -118,  -110,  -111,  -114,   186,  -118,   -18,  -118,
  -118,  -118,  -118,  -118,  -118,   -27,   -29,   -31,   -33,   -35,
  -118,  -118,  -118,   -44,  -118,   -47,   -48,  -118,  -118,   -84,
   -86,  -118,   -61,   -64,  -118,  -118,   -68,   -78,  -118,   -80,
  -118,   -82,   -90,   -95,  -100,  -105,  -107,  -104,  -112,  -118,
  -115,  -116,  -117,   -17,   -19,  -118,  -118,  -118,   -23,   -24,
   -26,   -28,   -30,   -34,  -118,  -118,  -118,   -39,   -41,   -42,
   -43,   -45,   -46,   -50,  -101,   -85,  -118,   -57,  -118,   -67,
  -118,   -79,   -81,  -113,   -20,   -21,   -22,  -118,  -118,   -38,
   -40,   -87,   -66,   -69,   -36,   -37 ]

racc_goto_table = [
    67,    49,   109,    91,   125,    94,    98,    58,    68,   135,
     1,     3,   137,    46,    80,    84,     2,    97,    48,   104,
   107,   108,   156,   157,   112,   114,    54,    62,    65,    74,
   119,    81,    86,    57,    89,    93,   140,   nil,   nil,   nil,
   nil,   126,   nil,   nil,   nil,   nil,   123,   nil,   134,   nil,
   nil,   nil,   nil,   nil,   138,   128,   144,   nil,   nil,   168,
   153,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,   nil,
   nil,   nil,   nil,   nil,   154,   nil,   126,    91,   nil,    91,
   173,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   178,
   nil,   nil,   183 ]

racc_goto_check = [
    33,    17,    21,    48,    35,    44,    15,    28,    34,    46,
     1,     3,    46,     3,    41,    41,     2,    14,    16,    18,
    19,    20,    22,    23,    24,    25,    26,    30,    31,    36,
    37,    40,    43,    45,    47,    49,    50,   nil,   nil,   nil,
   nil,    33,   nil,   nil,   nil,   nil,    34,   nil,    44,   nil,
   nil,   nil,   nil,   nil,    44,    28,    15,   nil,   nil,    35,
    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   nil,   nil,   nil,    17,   nil,    33,    48,   nil,    48,
    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,
   nil,   nil,    33 ]

racc_goto_pointer = [
   nil,    10,    16,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -30,   -41,     1,   -16,   -29,   -30,
   -29,   -48,   -89,   -88,   -27,   -27,     5,   nil,   -15,   nil,
     1,     2,   nil,   -28,   -21,   -65,    -1,   -29,   nil,   nil,
    -5,   -21,   nil,    -5,   -39,    12,   -80,    -7,   -38,    -9,
   -59 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,
    10,    11,    13,    14,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    20,    22,    71,    26,
   nil,   nil,    28,    29,   nil,   nil,    31,   nil,    34,    35,
   nil,   nil,    37,    38,   nil,    40,    41,   nil,    43,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 45, :_reduce_none,
  1, 45, :_reduce_none,
  1, 46, :_reduce_none,
  2, 46, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_13,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_16,
  4, 56, :_reduce_none,
  1, 58, :_reduce_none,
  2, 58, :_reduce_none,
  3, 59, :_reduce_20,
  3, 59, :_reduce_21,
  3, 59, :_reduce_22,
  2, 59, :_reduce_none,
  4, 57, :_reduce_24,
  1, 60, :_reduce_25,
  3, 60, :_reduce_26,
  1, 62, :_reduce_none,
  2, 62, :_reduce_28,
  1, 62, :_reduce_none,
  2, 62, :_reduce_30,
  2, 61, :_reduce_31,
  0, 63, :_reduce_32,
  1, 63, :_reduce_33,
  2, 63, :_reduce_34,
  1, 63, :_reduce_35,
  4, 65, :_reduce_36,
  4, 65, :_reduce_37,
  3, 64, :_reduce_38,
  1, 66, :_reduce_39,
  2, 66, :_reduce_40,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  4, 51, :_reduce_43,
  1, 68, :_reduce_44,
  2, 68, :_reduce_45,
  4, 52, :_reduce_46,
  1, 69, :_reduce_47,
  1, 69, :_reduce_48,
  2, 48, :_reduce_49,
  4, 48, :_reduce_50,
  1, 70, :_reduce_none,
  2, 70, :_reduce_52,
  1, 71, :_reduce_53,
  1, 71, :_reduce_54,
  2, 49, :_reduce_55,
  2, 50, :_reduce_56,
  4, 50, :_reduce_57,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 73, :_reduce_60,
  3, 73, :_reduce_61,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  3, 53, :_reduce_64,
  2, 53, :_reduce_65,
  5, 53, :_reduce_66,
  4, 53, :_reduce_67,
  1, 79, :_reduce_68,
  3, 79, :_reduce_69,
  1, 76, :_reduce_70,
  2, 76, :_reduce_71,
  1, 76, :_reduce_none,
  1, 80, :_reduce_73,
  1, 80, :_reduce_74,
  1, 80, :_reduce_75,
  1, 80, :_reduce_76,
  2, 80, :_reduce_77,
  2, 78, :_reduce_78,
  3, 78, :_reduce_79,
  2, 78, :_reduce_80,
  3, 78, :_reduce_81,
  2, 78, :_reduce_82,
  1, 78, :_reduce_83,
  2, 72, :_reduce_84,
  3, 72, :_reduce_85,
  1, 81, :_reduce_86,
  3, 81, :_reduce_87,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  3, 83, :_reduce_90,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  3, 82, :_reduce_95,
  2, 82, :_reduce_96,
  2, 55, :_reduce_none,
  1, 86, :_reduce_none,
  2, 86, :_reduce_none,
  3, 87, :_reduce_none,
  4, 54, :_reduce_101,
  2, 54, :_reduce_102,
  1, 89, :_reduce_103,
  3, 89, :_reduce_104,
  3, 89, :_reduce_105,
  1, 91, :_reduce_none,
  2, 91, :_reduce_none,
  1, 90, :_reduce_108,
  2, 90, :_reduce_109,
  2, 92, :_reduce_110,
  1, 93, :_reduce_111,
  2, 93, :_reduce_112,
  3, 93, :_reduce_113,
  1, 88, :_reduce_114,
  2, 88, :_reduce_115,
  1, 94, :_reduce_116,
  1, 94, :_reduce_117 ]

racc_reduce_n = 118

racc_shift_n = 186

racc_token_table = {
  false => 0,
  :error => 1,
  :BLANK => 2,
  :TEAMS => 3,
  :NEWLINE => 4,
  "---" => 5,
  :TEXT => 6,
  "--" => 7,
  "-" => 8,
  :PROP => 9,
  :PROP_END => 10,
  "," => 11,
  :PROP_NAME => 12,
  "(" => 13,
  :MINUTE => 14,
  ")" => 15,
  "[" => 16,
  "]" => 17,
  :YELLOW_CARD => 18,
  :RED_CARD => 19,
  :GROUP_DEF => 20,
  "|" => 21,
  :TEAM => 22,
  :ROUND_DEF => 23,
  :DATE => 24,
  :DURATION => 25,
  :DATETIME => 26,
  :GROUP => 27,
  "/" => 28,
  :ROUND => 29,
  :ORD => 30,
  :TIME => 31,
  :WDAY => 32,
  :STATUS => 33,
  :NOTE => 34,
  "@" => 35,
  :TIMEZONE => 36,
  :VS => 37,
  :SCORE => 38,
  :SCORE_MORE => 39,
  :PLAYER => 40,
  ";" => 41,
  :OG => 42,
  :PEN => 43 }

racc_nt_base = 44

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "BLANK",
  "TEAMS",
  "NEWLINE",
  "\"---\"",
  "TEXT",
  "\"--\"",
  "\"-\"",
  "PROP",
  "PROP_END",
  "\",\"",
  "PROP_NAME",
  "\"(\"",
  "MINUTE",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "YELLOW_CARD",
  "RED_CARD",
  "GROUP_DEF",
  "\"|\"",
  "TEAM",
  "ROUND_DEF",
  "DATE",
  "DURATION",
  "DATETIME",
  "GROUP",
  "\"/\"",
  "ROUND",
  "ORD",
  "TIME",
  "WDAY",
  "STATUS",
  "NOTE",
  "\"@\"",
  "TIMEZONE",
  "VS",
  "SCORE",
  "SCORE_MORE",
  "PLAYER",
  "\";\"",
  "OG",
  "PEN",
  "$start",
  "document",
  "elements",
  "element",
  "date_header",
  "group_header",
  "round_header",
  "group_def",
  "round_def",
  "match_line",
  "goal_lines",
  "goal_lines_alt",
  "teams_list",
  "lineup_lines",
  "list",
  "list_item",
  "lineup",
  "lineup_name",
  "lineup_sep",
  "lineup_name_opts",
  "card",
  "lineup_sub",
  "card_body",
  "card_type",
  "team_values",
  "round_date_opts",
  "date_header_body",
  "date_header_date",
  "geo_opts",
  "round_values",
  "group_sep",
  "round_sep",
  "match_opts",
  "match",
  "more_match_opts",
  "more_matches",
  "date_opts",
  "geo_values",
  "match_result",
  "match_fixture",
  "match_sep",
  "score",
  "goals_alt",
  "goal_alt",
  "minute",
  "goal_lines_body",
  "goals",
  "goal_sep",
  "goal",
  "minutes",
  "minute_opts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_13(val, _values, result)
     trace( "REDUCE BLANK" )
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_16(val, _values, result)
     puts "!! skipping invalid content (trying to recover from parse error):"
                pp val[0] 
                @errors << "parser error (recover) - skipping #{val[0].pretty_inspect}"

    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_20(val, _values, result)
      puts "level 3"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_21(val, _values, result)
      puts "level 2 #{val[1]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_22(val, _values, result)
      puts "level 1 #{val[1]}"
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_24(val, _values, result)
      @tree << LineupLine.new( team:    val[0],
                                                    lineup:  val[1]
                                                  ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_25(val, _values, result)
     result = [[val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_26(val, _values, result)
                           ## if lineup_sep is -  start a new sub array!!
                       if val[1] == '-'
                          result << [val[2]]
                       else
                          result[-1] << val[2]
                       end

    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_28(val, _values, result)
     result = val[0]
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_30(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_31(val, _values, result)
                                  kwargs = { name: val[0] }.merge( val[1] )
                              result = Lineup.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_32(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_33(val, _values, result)
                                  result = { card: val[0] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_34(val, _values, result)
                                  result = { card: val[0], sub: val[1] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_35(val, _values, result)
                                  result = { sub: val[0] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_36(val, _values, result)
                                  result = Sub.new( sub:    val[1],
                                                minute: Minute.new(val[2][1]) 
                                              )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_37(val, _values, result)
                                  result = Sub.new( sub:    val[2],
                                                minute: Minute.new(val[1][1]) 
                                              )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_38(val, _values, result)
                                  kwargs = val[1]
                              result = Card.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_39(val, _values, result)
     result = { name: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_40(val, _values, result)
     result = { name: val[0],
                                        minute: Minute.new(val[1][1]) } 

    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_43(val, _values, result)
                          @tree << GroupDef.new( name:  val[0],
                                             teams: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_44(val, _values, result)
                                                   result = val
                                               ## e.g. val is ["Austria"] 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_45(val, _values, result)
                                                   result.push( val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_46(val, _values, result)
                          kwargs = { name: val[0] }.merge( val[2] )
                      @tree<< RoundDef.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_47(val, _values, result)
     result = { date: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_48(val, _values, result)
     result = { duration: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 179)
  def _reduce_49(val, _values, result)
                         kwargs = {}.merge( val[0] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_50(val, _values, result)
                         kwargs = {}.merge( val[1] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.y', 190)
  def _reduce_52(val, _values, result)
      result = {}.merge( val[0], val[1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 193)
  def _reduce_53(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 194)
  def _reduce_54(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_55(val, _values, result)
                         @tree <<  GroupHeader.new( name: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 212)
  def _reduce_56(val, _values, result)
                         @tree <<  RoundHeader.new( names: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 216)
  def _reduce_57(val, _values, result)
                        @tree <<  RoundHeader.new( names: val[0], group: val[2] )  

    result
  end
.,.,

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.y', 221)
  def _reduce_60(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 222)
  def _reduce_61(val, _values, result)
       result.push( val[2] )
    result
  end
.,.,

# reduce 62 omitted

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.y', 232)
  def _reduce_64(val, _values, result)
                           kwargs = {}.merge( val[0], val[1], val[2] )
                       @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 237)
  def _reduce_65(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 245)
  def _reduce_66(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )
                     
                      ## add more match fixtures
                      val[3].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 255)
  def _reduce_67(val, _values, result)
                          kwargs = val[0]
                      @tree << MatchLine.new( **kwargs )
 
                      ## add more match fixtures
                      val[2].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 269)
  def _reduce_68(val, _values, result)
                                        trace( "REDUCE => more_matches : match" ) 
                                    result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 274)
  def _reduce_69(val, _values, result)
                                         trace( "REDUCE => more_matches : more_matches ',' match" ) 
                                     result.push( val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 280)
  def _reduce_70(val, _values, result)
       result = { ord: val[0][1][:value] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 281)
  def _reduce_71(val, _values, result)
       result = { ord: val[0][1][:value] }.merge( val[1] )
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.y', 285)
  def _reduce_73(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 286)
  def _reduce_74(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 287)
  def _reduce_75(val, _values, result)
       result = { time: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 288)
  def _reduce_76(val, _values, result)
       result = { wday: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 289)
  def _reduce_77(val, _values, result)
       result = { wday: val[0][1], time: val[1][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 303)
  def _reduce_78(val, _values, result)
                          ## todo - add possible status_notes too!!! 
                      result = { status: val[0][1][:status] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 308)
  def _reduce_79(val, _values, result)
                         result = { status: val[0][1][:status] }.merge( val[1] ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 310)
  def _reduce_80(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 311)
  def _reduce_81(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 312)
  def _reduce_82(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 313)
  def _reduce_83(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 319)
  def _reduce_84(val, _values, result)
     result = { geo: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 320)
  def _reduce_85(val, _values, result)
     result = { geo: val[1], timezone: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 323)
  def _reduce_86(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 324)
  def _reduce_87(val, _values, result)
      result.push( val[2] )
    result
  end
.,.,

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.y', 332)
  def _reduce_90(val, _values, result)
                                   trace( "RECUDE match_fixture" )
                               result = { team1: val[0],
                                          team2: val[2] }   

    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'parser.y', 346)
  def _reduce_95(val, _values, result)
                               trace( "REDUCE => match_result : TEAM score TEAM" )
                           result = { team1: val[0],
                                      team2: val[2],
                                      score: val[1][1]
                                    }   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 354)
  def _reduce_96(val, _values, result)
                              trace( "REDUCE  => match_result : match_fixture score" )
                          result = { score: val[1][1] }.merge( val[0] )  

    result
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.y', 386)
  def _reduce_101(val, _values, result)
                           kwargs = val[1]
                       @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 391)
  def _reduce_102(val, _values, result)
                             kwargs = val[0]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 396)
  def _reduce_103(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: [] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 399)
  def _reduce_104(val, _values, result)
      result = { goals1: [],
                                                              goals2: val[2] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 402)
  def _reduce_105(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: val[2] }

    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.y', 418)
  def _reduce_108(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 419)
  def _reduce_109(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 435)
  def _reduce_110(val, _values, result)
                      result = Goal.new( player:  val[0],
                                     minutes: val[1] )   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 447)
  def _reduce_111(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 448)
  def _reduce_112(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 449)
  def _reduce_113(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 455)
  def _reduce_114(val, _values, result)
                            kwargs = {}.merge( val[0][1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 460)
  def _reduce_115(val, _values, result)
                            kwargs = { }.merge( val[0][1] ).merge( val[1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 464)
  def _reduce_116(val, _values, result)
      result = { og: true }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 465)
  def _reduce_117(val, _values, result)
      result = { pen: true }
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RaccMatchParser
