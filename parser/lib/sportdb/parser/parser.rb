#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.1
# from Racc grammar file "parser.y".
#

require 'racc/parser.rb'
class RaccMatchParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    20,    12,    21,   209,    56,   239,   250,   225,    22,   214,
   144,    23,   241,   107,   171,   143,    24,    58,    49,    25,
    26,   226,    27,   208,   103,   242,    31,    20,    12,    21,
    28,   173,    46,    29,    33,    22,    34,    35,    23,    37,
    40,    42,    43,    24,    98,    49,    25,    26,    98,    27,
    55,    51,    53,    31,   108,   104,    84,    28,    94,    46,
    29,    33,   168,    34,    35,   118,    37,    40,    42,    43,
   103,   216,   174,   222,   135,    59,   138,    55,    51,    53,
    80,   137,    81,    86,    95,    97,    84,    91,    95,    97,
    84,    68,    55,    68,    53,   110,    55,    89,    53,    68,
   217,   104,   221,    55,    61,    70,    71,    70,    71,   113,
    49,   244,   152,    70,    71,    75,    65,   149,    88,   100,
    64,   101,   151,   159,   160,   226,    42,    43,   141,   147,
   144,   144,   187,   188,   189,   143,   143,   127,   130,   128,
   129,   185,    65,    76,    77,   123,    64,   127,   130,   128,
   129,    78,    84,  -107,  -108,    85,    46,   102,   114,   115,
    55,   123,   124,   131,   133,   134,   139,   140,   145,   146,
   155,   157,   161,   162,   164,   165,   -97,   166,    46,   175,
   176,   177,    49,   179,   123,   181,    55,   183,    55,   191,
   192,   193,   194,   195,   196,   197,   198,   200,   201,   202,
   203,    68,   205,   206,   207,    75,   211,   212,   214,   218,
   219,   220,   223,    46,   227,   228,   229,    55,   123,   231,
   232,   233,   234,   235,   236,   237,   238,   243,    46,   246,
   155,   248,    75,   251,   214,   253 ]

racc_action_check = [
     0,     0,     0,   149,     1,   214,   247,   169,     0,   247,
   215,     0,   214,    46,    95,   215,     0,    21,     0,     0,
     0,   169,     0,   149,    46,   215,     0,     2,     2,     2,
     0,    96,     0,     0,     0,     2,     0,     0,     2,     0,
     0,     0,     0,     2,    39,     2,     2,     2,    92,     2,
     0,     0,     0,     2,    46,    46,    95,     2,    39,     2,
     2,     2,    92,     2,     2,    52,     2,     2,     2,     2,
    45,   156,    96,   163,    62,    22,    62,     2,     2,     2,
    31,    62,    31,    36,    39,    39,    39,    36,    92,    92,
    92,    25,    51,    26,    51,    47,    31,    36,    31,   155,
   156,    45,   163,    52,    23,    25,    25,    26,    26,    47,
    47,   224,    73,   155,   155,    27,    24,    73,    36,    40,
    24,    40,    73,    77,    77,   224,    40,    40,    66,    72,
    66,    72,   123,   123,   125,    66,    72,   125,   125,   125,
   125,   121,   136,    28,    29,   121,   136,    58,    58,    58,
    58,    30,    32,    33,    34,    35,    38,    43,    49,    50,
    53,    55,    56,    59,    60,    61,    64,    65,    68,    69,
    75,    76,    79,    82,    84,    87,    89,    90,    94,    97,
   106,   109,   111,   113,   114,   116,   117,   118,   120,   127,
   128,   129,   130,   131,   132,   133,   135,   137,   138,   139,
   141,   142,   144,   147,   148,   150,   151,   152,   153,   158,
   161,   162,   165,   168,   172,   174,   181,   182,   185,   191,
   192,   193,   196,   197,   207,   208,   209,   222,   226,   238,
   239,   240,   241,   249,   250,   252 ]

racc_action_pointer = [
    -1,     4,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    13,    65,    89,   101,    76,    78,   100,   111,   112,
   147,    45,   106,   120,   121,   151,    79,   nil,   123,    40,
    84,   nil,   nil,   115,   nil,    51,     5,    91,   nil,   107,
   155,    41,    52,   109,   nil,   139,   162,   nil,   142,   152,
   151,   149,    63,   nil,   151,   151,   117,   nil,   146,   147,
   nil,   nil,   118,   104,   nil,   143,   138,    88,   nil,   144,
   nil,   nil,   145,   nil,   126,   nil,   nil,   137,   nil,   136,
   137,   nil,    44,   nil,   145,    10,    27,   175,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   147,   nil,   nil,   148,
   nil,   163,   nil,   179,   162,   nil,   174,   135,   183,   nil,
   137,   123,   nil,    78,   nil,   132,   nil,   183,   184,   185,
   188,   189,   183,   181,   nil,   192,   127,   193,   194,   183,
   nil,   196,   186,   nil,   198,   nil,   nil,   199,   193,    -1,
   190,   202,   203,   183,   nil,    84,    67,   nil,   205,   nil,
   nil,   206,   207,    55,   nil,   208,   nil,   nil,   180,     3,
   nil,   nil,   210,   nil,   211,   nil,   nil,   nil,   nil,   nil,
   nil,   212,   166,   nil,   nil,   196,   nil,   nil,   nil,   nil,
   nil,   215,   216,   217,   nil,   nil,   218,   213,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   220,   210,   202,
   nil,   nil,   nil,   nil,   -10,    -3,   nil,   nil,   nil,   nil,
   nil,   nil,   179,   nil,   107,   nil,   195,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   214,   203,
   205,   217,   nil,   nil,   nil,   nil,   nil,   -16,   nil,   207,
   209,   nil,   209,   nil ]

racc_action_default = [
    -1,  -157,    -2,    -3,    -5,    -6,    -7,    -8,    -9,   -10,
   -11,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,
   -21,  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -157,
  -157,  -157,   -85,   -87,   -88,  -157,  -157,   -94,  -157,  -157,
  -104,  -106,  -109,  -110,  -122,  -123,  -157,  -157,  -132,  -157,
  -157,  -157,  -142,  -157,  -147,  -157,  -157,    -4,  -157,  -157,
   -31,   -33,  -157,   -36,  -157,   -44,  -157,   -48,   -53,   -73,
   -75,   -76,  -157,   -56,   -59,   -66,  -157,  -157,   -83,  -157,
   -87,   -88,  -157,   -86,  -157,   -89,   -90,  -157,   -92,   -93,
  -157,   -96,  -157,   -99,  -157,  -157,  -157,  -157,  -117,  -105,
  -107,  -108,  -111,  -127,  -128,  -130,  -157,  -125,  -126,  -157,
  -131,  -157,  -134,  -135,  -137,  -140,  -157,  -157,  -145,  -148,
  -143,  -149,  -150,  -153,   254,  -157,   -23,  -157,  -157,  -157,
  -157,  -157,  -157,  -157,   -34,  -157,  -157,   -38,   -40,   -42,
   -45,  -157,  -157,   -50,   -51,   -54,   -74,  -157,  -157,  -157,
  -157,   -61,   -63,   -68,   -67,  -157,  -157,   -78,  -157,   -81,
   -82,  -157,  -157,  -118,  -120,  -157,   -95,   -98,  -157,  -157,
  -102,  -112,  -157,  -114,  -157,  -116,  -124,  -129,  -133,  -136,
  -138,  -157,  -144,  -146,  -151,  -157,  -154,  -155,  -156,   -22,
   -24,  -157,  -157,  -157,   -28,   -29,  -157,  -157,   -35,   -37,
   -39,   -41,   -43,   -46,   -49,   -52,   -47,  -157,  -157,  -157,
   -60,   -62,   -64,   -65,  -157,  -157,   -77,   -79,   -80,   -84,
  -139,  -119,  -157,   -91,  -157,  -101,  -157,  -113,  -115,  -141,
  -152,   -25,   -26,   -27,   -30,   -32,   -55,   -57,  -157,   -66,
  -157,  -157,   -72,  -121,  -100,  -103,   -58,   -68,   -70,  -157,
   -68,   -71,  -157,   -69 ]

racc_goto_table = [
    74,    92,   153,    66,    72,   122,   119,    63,   169,   126,
    83,   112,    93,   120,    82,     3,     1,    57,   105,   109,
     2,   125,    60,   132,    62,   136,   204,    73,   148,   150,
   252,   156,   158,    79,   116,    87,    90,    99,   163,   106,
   111,   117,   121,   186,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   170,   nil,   nil,
   nil,   nil,   nil,   nil,   180,   167,   nil,   nil,   nil,   nil,
   nil,   184,   nil,   172,   119,   178,   190,   182,   nil,   nil,
   nil,   nil,   224,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   199,
   nil,   nil,   nil,   210,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   170,   nil,   215,   nil,   230,   119,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   247,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   240,   nil,   245,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   249 ]

racc_goto_check = [
    31,    46,    33,    26,    26,    58,    62,    24,    48,    20,
    41,    56,    47,    60,    59,     3,     1,     3,    54,    54,
     2,    19,    21,    22,    23,    25,    27,    29,    30,    32,
    34,    37,    38,    39,    59,    43,    44,    49,    50,    53,
    57,    61,    63,    64,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,   nil,
   nil,   nil,   nil,   nil,    58,    47,   nil,   nil,   nil,   nil,
   nil,    58,   nil,    41,    62,    56,    20,    60,   nil,   nil,
   nil,   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,
   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    46,   nil,    26,   nil,    58,    62,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    33,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,   nil,    46,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    31 ]

racc_goto_pointer = [
   nil,    16,    20,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -37,
   -49,    -1,   -37,     0,   -17,   -37,   -22,  -116,   nil,     0,
   -45,   -27,   -44,   -73,  -220,   nil,   nil,   -45,   -45,     2,
   nil,   -22,   nil,    -1,     0,   nil,   -37,   -27,   -86,    -3,
   -46,   nil,   nil,    -7,   -27,   nil,   -36,    -7,   -50,   -17,
   -40,   -11,   -46,   -13,   -80 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     6,     7,     8,     9,
    10,    11,    13,    14,    15,    16,    17,    18,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    67,   142,   nil,
   nil,   nil,   nil,   nil,   213,   154,    69,   nil,   nil,    30,
    32,    96,    36,   nil,   nil,    38,    39,   nil,   nil,    41,
   nil,    44,    45,   nil,   nil,    47,    48,   nil,   nil,    50,
    52,   nil,    54,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 57, :_reduce_none,
  1, 57, :_reduce_none,
  1, 58, :_reduce_none,
  2, 58, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_13,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_21,
  4, 68, :_reduce_none,
  1, 75, :_reduce_none,
  2, 75, :_reduce_none,
  3, 76, :_reduce_25,
  3, 76, :_reduce_26,
  3, 76, :_reduce_27,
  2, 76, :_reduce_none,
  4, 74, :_reduce_29,
  5, 73, :_reduce_30,
  0, 78, :_reduce_none,
  3, 78, :_reduce_32,
  1, 77, :_reduce_33,
  2, 77, :_reduce_34,
  4, 72, :_reduce_35,
  1, 79, :_reduce_36,
  3, 79, :_reduce_37,
  1, 81, :_reduce_none,
  2, 81, :_reduce_none,
  1, 81, :_reduce_none,
  2, 81, :_reduce_none,
  2, 80, :_reduce_42,
  3, 80, :_reduce_43,
  1, 80, :_reduce_44,
  2, 80, :_reduce_45,
  4, 70, :_reduce_46,
  4, 71, :_reduce_47,
  1, 82, :_reduce_48,
  3, 82, :_reduce_49,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  2, 84, :_reduce_none,
  1, 83, :_reduce_53,
  2, 83, :_reduce_54,
  5, 69, :_reduce_55,
  0, 86, :_reduce_56,
  3, 86, :_reduce_57,
  4, 86, :_reduce_58,
  1, 85, :_reduce_59,
  3, 85, :_reduce_60,
  1, 88, :_reduce_none,
  2, 88, :_reduce_62,
  1, 88, :_reduce_none,
  2, 88, :_reduce_64,
  3, 87, :_reduce_65,
  0, 89, :_reduce_66,
  1, 89, :_reduce_67,
  0, 90, :_reduce_68,
  6, 90, :_reduce_69,
  3, 90, :_reduce_70,
  4, 90, :_reduce_71,
  3, 91, :_reduce_72,
  1, 82, :_reduce_73,
  2, 82, :_reduce_74,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  4, 63, :_reduce_77,
  1, 93, :_reduce_78,
  2, 93, :_reduce_79,
  4, 64, :_reduce_80,
  1, 94, :_reduce_81,
  1, 94, :_reduce_82,
  2, 60, :_reduce_83,
  4, 60, :_reduce_84,
  1, 95, :_reduce_none,
  2, 95, :_reduce_86,
  1, 96, :_reduce_87,
  1, 96, :_reduce_88,
  2, 61, :_reduce_89,
  2, 62, :_reduce_90,
  4, 62, :_reduce_91,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  1, 98, :_reduce_94,
  3, 98, :_reduce_95,
  1, 100, :_reduce_none,
  1, 100, :_reduce_none,
  3, 65, :_reduce_98,
  2, 65, :_reduce_99,
  5, 65, :_reduce_100,
  4, 65, :_reduce_101,
  1, 104, :_reduce_102,
  3, 104, :_reduce_103,
  1, 101, :_reduce_104,
  2, 101, :_reduce_105,
  1, 101, :_reduce_none,
  1, 105, :_reduce_107,
  1, 105, :_reduce_108,
  1, 105, :_reduce_109,
  1, 105, :_reduce_110,
  2, 105, :_reduce_111,
  2, 103, :_reduce_112,
  3, 103, :_reduce_113,
  2, 103, :_reduce_114,
  3, 103, :_reduce_115,
  2, 103, :_reduce_116,
  1, 103, :_reduce_117,
  2, 97, :_reduce_118,
  3, 97, :_reduce_119,
  1, 106, :_reduce_120,
  3, 106, :_reduce_121,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  3, 108, :_reduce_124,
  1, 109, :_reduce_none,
  1, 109, :_reduce_none,
  1, 110, :_reduce_none,
  1, 110, :_reduce_none,
  3, 107, :_reduce_129,
  2, 107, :_reduce_130,
  2, 67, :_reduce_131,
  1, 111, :_reduce_132,
  3, 111, :_reduce_133,
  2, 111, :_reduce_134,
  1, 113, :_reduce_none,
  2, 113, :_reduce_none,
  2, 112, :_reduce_137,
  3, 112, :_reduce_138,
  4, 66, :_reduce_139,
  2, 66, :_reduce_140,
  4, 66, :_reduce_141,
  1, 115, :_reduce_142,
  2, 115, :_reduce_143,
  3, 115, :_reduce_144,
  1, 117, :_reduce_none,
  2, 117, :_reduce_none,
  1, 116, :_reduce_147,
  2, 116, :_reduce_148,
  2, 118, :_reduce_149,
  1, 119, :_reduce_150,
  2, 119, :_reduce_151,
  3, 119, :_reduce_152,
  1, 114, :_reduce_153,
  2, 114, :_reduce_154,
  1, 120, :_reduce_155,
  1, 120, :_reduce_156 ]

racc_reduce_n = 157

racc_shift_n = 254

racc_token_table = {
  false => 0,
  :error => 1,
  :BLANK => 2,
  :TEAMS => 3,
  :NEWLINE => 4,
  "---" => 5,
  :TEXT => 6,
  "--" => 7,
  "-" => 8,
  :PROP_ATTENDANCE => 9,
  :PROP_NUM => 10,
  :PROP_END => 11,
  :PROP_REFEREE => 12,
  ";" => 13,
  :ATTENDANCE => 14,
  :PROP_NAME => 15,
  :ENCLOSED_NAME => 16,
  :PROP_PENALTIES => 17,
  "," => 18,
  :SCORE => 19,
  :PROP_YELLOWCARDS => 20,
  :PROP_REDCARDS => 21,
  :MINUTE => 22,
  :PROP => 23,
  :COACH => 24,
  "(" => 25,
  ")" => 26,
  "[" => 27,
  "]" => 28,
  :YELLOW_CARD => 29,
  :RED_CARD => 30,
  :GROUP_DEF => 31,
  "|" => 32,
  :TEAM => 33,
  :ROUND_DEF => 34,
  :DATE => 35,
  :DURATION => 36,
  :DATETIME => 37,
  :GROUP => 38,
  "/" => 39,
  :ROUND => 40,
  :ORD => 41,
  :TIME => 42,
  :WDAY => 43,
  :STATUS => 44,
  :NOTE => 45,
  "@" => 46,
  :TIMEZONE => 47,
  :GEO => 48,
  :VS => 49,
  :SCORE_MORE => 50,
  :PLAYER => 51,
  :PROP_GOALS => 52,
  :NONE => 53,
  :OG => 54,
  :PEN => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "BLANK",
  "TEAMS",
  "NEWLINE",
  "\"---\"",
  "TEXT",
  "\"--\"",
  "\"-\"",
  "PROP_ATTENDANCE",
  "PROP_NUM",
  "PROP_END",
  "PROP_REFEREE",
  "\";\"",
  "ATTENDANCE",
  "PROP_NAME",
  "ENCLOSED_NAME",
  "PROP_PENALTIES",
  "\",\"",
  "SCORE",
  "PROP_YELLOWCARDS",
  "PROP_REDCARDS",
  "MINUTE",
  "PROP",
  "COACH",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "YELLOW_CARD",
  "RED_CARD",
  "GROUP_DEF",
  "\"|\"",
  "TEAM",
  "ROUND_DEF",
  "DATE",
  "DURATION",
  "DATETIME",
  "GROUP",
  "\"/\"",
  "ROUND",
  "ORD",
  "TIME",
  "WDAY",
  "STATUS",
  "NOTE",
  "\"@\"",
  "TIMEZONE",
  "GEO",
  "VS",
  "SCORE_MORE",
  "PLAYER",
  "PROP_GOALS",
  "NONE",
  "OG",
  "PEN",
  "$start",
  "document",
  "elements",
  "element",
  "date_header",
  "group_header",
  "round_header",
  "group_def",
  "round_def",
  "match_line",
  "goal_lines",
  "goal_lines_alt",
  "teams_list",
  "lineup_lines",
  "yellowcard_lines",
  "redcard_lines",
  "penalties_lines",
  "referee_line",
  "attendance_line",
  "list",
  "list_item",
  "referee",
  "attendance_opt",
  "penalties_body",
  "penalty",
  "penalty_sep",
  "card_body",
  "player_w_minute",
  "card_sep",
  "lineup",
  "coach_opt",
  "lineup_name",
  "lineup_sep",
  "lineup_card_opts",
  "lineup_sub_opts",
  "card",
  "card_type",
  "team_values",
  "round_date_opts",
  "date_header_body",
  "date_header_date",
  "geo_opts",
  "round_values",
  "group_sep",
  "round_sep",
  "match_opts",
  "match",
  "more_match_opts",
  "more_matches",
  "date_opts",
  "geo_values",
  "match_result",
  "match_fixture",
  "match_sep",
  "score",
  "goals_alt",
  "goal_alt",
  "goal_alt_sep",
  "minute",
  "goal_lines_body",
  "goals",
  "goal_sep",
  "goal",
  "minutes",
  "minute_opts" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_13(val, _values, result)
     trace( "REDUCE BLANK" )
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_21(val, _values, result)
     puts "!! skipping invalid content (trying to recover from parse error):"
                pp val[0] 
                @errors << "parser error (recover) - skipping #{val[0].pretty_inspect}"

    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_25(val, _values, result)
      puts "level 3"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_26(val, _values, result)
      puts "level 2 #{val[1]}"
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_27(val, _values, result)
      puts "level 1 #{val[1]}"
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_29(val, _values, result)
                                     @tree << AttendanceLine.new( att: val[1][1][:value] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_30(val, _values, result)
                                   kwargs = val[1] 
                               @tree << RefereeLine.new( **kwargs ) 

    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_32(val, _values, result)
                                     @tree << AttendanceLine.new( att: val[2][1][:value] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_33(val, _values, result)
      result = { name: val[0]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_34(val, _values, result)
      result = { name: val[0], country: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_35(val, _values, result)
                                   @tree << PenaltiesLine.new( penalties: val[1] )                                                            

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_36(val, _values, result)
      result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_37(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_42(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_43(val, _values, result)
                                     result = Penalty.new( score: val[0][1],
                                                       name: val[1],
                                                       note: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_44(val, _values, result)
                                     result = Penalty.new( name: val[0] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_45(val, _values, result)
                                     result = Penalty.new( name: val[0],
                                                       note: val[1] )                                

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_46(val, _values, result)
                                   @tree << CardsLine.new( type: 'Y', bookings: val[1] )                               

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_47(val, _values, result)
                                   @tree << CardsLine.new( type: 'R', bookings: val[1] )                    

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_48(val, _values, result)
       result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_49(val, _values, result)
      result << val[2]
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.y', 150)
  def _reduce_53(val, _values, result)
     result = Booking.new( name: val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_54(val, _values, result)
     result = Booking.new( name: val[0], minute: val[1][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_55(val, _values, result)
                              kwargs = { team:    val[0],
                                     lineup:  val[1]  }.merge( val[2] ) 
                          @tree << LineupLine.new( **kwargs ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_56(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_57(val, _values, result)
      result = { coach: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_58(val, _values, result)
      result = { coach: val[3] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_59(val, _values, result)
     result = [[val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_60(val, _values, result)
                           ## if lineup_sep is -  start a new sub array!!
                       if val[1] == '-'
                          result << [val[2]]
                       else
                          result[-1] << val[2]
                       end

    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.y', 186)
  def _reduce_62(val, _values, result)
     result = val[0]
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.y', 188)
  def _reduce_64(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 193)
  def _reduce_65(val, _values, result)
                                  kwargs = { name: val[0] }.merge( val[1] ).merge( val[2] )
                              result = Lineup.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 197)
  def _reduce_66(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 198)
  def _reduce_67(val, _values, result)
     result = { card: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 215)
  def _reduce_68(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 218)
  def _reduce_69(val, _values, result)
                                  kwargs = { name: val[1] }.merge( val[2] ).merge( val[4] )
                              sub    = Sub.new( sub:    Lineup.new( **kwargs ),
                                                minute: Minute.new(val[3][1]) 
                                              )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 226)
  def _reduce_70(val, _values, result)
                                  sub = Sub.new( sub: val[1] )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 232)
  def _reduce_71(val, _values, result)
                                  sub = Sub.new( sub:    val[2],
                                             minute: Minute.new(val[1][1]) 
                                            )
                              result = { sub: sub }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 242)
  def _reduce_72(val, _values, result)
                                  kwargs = val[1]
                              result = Card.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 247)
  def _reduce_73(val, _values, result)
     result = { name: val[0] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 250)
  def _reduce_74(val, _values, result)
     result = { name: val[0],
                                        minute: Minute.new(val[1][1]) } 

    result
  end
.,.,

# reduce 75 omitted

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.y', 264)
  def _reduce_77(val, _values, result)
                          @tree << GroupDef.new( name:  val[0],
                                             teams: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 270)
  def _reduce_78(val, _values, result)
                                                   result = val
                                               ## e.g. val is ["Austria"] 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 274)
  def _reduce_79(val, _values, result)
                                                   result.push( val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 283)
  def _reduce_80(val, _values, result)
                          kwargs = { name: val[0] }.merge( val[2] )
                      @tree<< RoundDef.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 288)
  def _reduce_81(val, _values, result)
     result = { date: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 289)
  def _reduce_82(val, _values, result)
     result = { duration: val[0][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 295)
  def _reduce_83(val, _values, result)
                         kwargs = {}.merge( val[0] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 300)
  def _reduce_84(val, _values, result)
                         kwargs = {}.merge( val[1] )
                     @tree <<  DateHeader.new( **kwargs )  

    result
  end
.,.,

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.y', 306)
  def _reduce_86(val, _values, result)
      result = {}.merge( val[0], val[1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 309)
  def _reduce_87(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 310)
  def _reduce_88(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 317)
  def _reduce_89(val, _values, result)
                         @tree <<  GroupHeader.new( name: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 328)
  def _reduce_90(val, _values, result)
                         @tree <<  RoundHeader.new( names: val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 332)
  def _reduce_91(val, _values, result)
                        @tree <<  RoundHeader.new( names: val[0], group: val[2] )  

    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.y', 337)
  def _reduce_94(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 338)
  def _reduce_95(val, _values, result)
       result.push( val[2] )
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.y', 348)
  def _reduce_98(val, _values, result)
                           kwargs = {}.merge( val[0], val[1], val[2] )
                       @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 353)
  def _reduce_99(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 361)
  def _reduce_100(val, _values, result)
                          kwargs = {}.merge( val[0], val[1] )
                      @tree << MatchLine.new( **kwargs )
                     
                      ## add more match fixtures
                      val[3].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 371)
  def _reduce_101(val, _values, result)
                          kwargs = val[0]
                      @tree << MatchLine.new( **kwargs )
 
                      ## add more match fixtures
                      val[2].each do |kwargs|
                         @tree << MatchLine.new( **kwargs)
                      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 385)
  def _reduce_102(val, _values, result)
                                        trace( "REDUCE => more_matches : match" ) 
                                    result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 390)
  def _reduce_103(val, _values, result)
                                         trace( "REDUCE => more_matches : more_matches ',' match" ) 
                                     result.push( val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 396)
  def _reduce_104(val, _values, result)
       result = { ord: val[0][1][:value] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 397)
  def _reduce_105(val, _values, result)
       result = { ord: val[0][1][:value] }.merge( val[1] )
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'parser.y', 401)
  def _reduce_107(val, _values, result)
       result = { date: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 402)
  def _reduce_108(val, _values, result)
       result = {}.merge( val[0][1] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 403)
  def _reduce_109(val, _values, result)
       result = { time: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 404)
  def _reduce_110(val, _values, result)
       result = { wday: val[0][1]}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 405)
  def _reduce_111(val, _values, result)
       result = { wday: val[0][1], time: val[1][1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 419)
  def _reduce_112(val, _values, result)
                          ## todo - add possible status_notes too!!! 
                      result = { status: val[0][1][:status] }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 424)
  def _reduce_113(val, _values, result)
                         result = { status: val[0][1][:status] }.merge( val[1] ) 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 426)
  def _reduce_114(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 427)
  def _reduce_115(val, _values, result)
     result = {}.merge( val[0] )
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 428)
  def _reduce_116(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 429)
  def _reduce_117(val, _values, result)
     result = {}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 435)
  def _reduce_118(val, _values, result)
     result = { geo: val[1] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 436)
  def _reduce_119(val, _values, result)
     result = { geo: val[1], timezone: val[2] }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 439)
  def _reduce_120(val, _values, result)
      result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 440)
  def _reduce_121(val, _values, result)
      result.push( val[2] )
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.y', 448)
  def _reduce_124(val, _values, result)
                                   trace( "RECUDE match_fixture" )
                               result = { team1: val[0],
                                          team2: val[2] }   

    result
  end
.,.,

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.y', 462)
  def _reduce_129(val, _values, result)
                               trace( "REDUCE => match_result : TEAM score TEAM" )
                           result = { team1: val[0],
                                      team2: val[2],
                                      score: val[1][1]
                                    }   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 470)
  def _reduce_130(val, _values, result)
                              trace( "REDUCE  => match_result : match_fixture score" )
                          result = { score: val[1][1] }.merge( val[0] )  

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 495)
  def _reduce_131(val, _values, result)
                                 @tree << GoalLineAlt.new( goals: val[0] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 499)
  def _reduce_132(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 501)
  def _reduce_133(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 503)
  def _reduce_134(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

# reduce 135 omitted

# reduce 136 omitted

module_eval(<<'.,.,', 'parser.y', 511)
  def _reduce_137(val, _values, result)
                               result = GoalAlt.new( score:   val[0],
                                                 player:  val[1] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 516)
  def _reduce_138(val, _values, result)
                               result = GoalAlt.new( score:  val[0],
                                                 player: val[1],
                                                 minute: val[2] )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 528)
  def _reduce_139(val, _values, result)
                           kwargs = val[1]
                       @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 533)
  def _reduce_140(val, _values, result)
                             kwargs = val[0]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 538)
  def _reduce_141(val, _values, result)
                             kwargs = val[1]
                         @tree << GoalLine.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 543)
  def _reduce_142(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: [] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 546)
  def _reduce_143(val, _values, result)
      result = { goals1: [],
                                                              goals2: val[1] } 

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 549)
  def _reduce_144(val, _values, result)
      result = { goals1: val[0],
                                                              goals2: val[2] }

    result
  end
.,.,

# reduce 145 omitted

# reduce 146 omitted

module_eval(<<'.,.,', 'parser.y', 565)
  def _reduce_147(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 566)
  def _reduce_148(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 582)
  def _reduce_149(val, _values, result)
                      result = Goal.new( player:  val[0],
                                     minutes: val[1] )   

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 594)
  def _reduce_150(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 595)
  def _reduce_151(val, _values, result)
     result.push( val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 596)
  def _reduce_152(val, _values, result)
     result.push( val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 602)
  def _reduce_153(val, _values, result)
                            kwargs = {}.merge( val[0][1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 607)
  def _reduce_154(val, _values, result)
                            kwargs = { }.merge( val[0][1] ).merge( val[1] )
                        result = Minute.new( **kwargs )

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 611)
  def _reduce_155(val, _values, result)
      result = { og: true }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 612)
  def _reduce_156(val, _values, result)
      result = { pen: true }
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class RaccMatchParser
